OBJECT Table 27 Item
{
  OBJECT-PROPERTIES
  {
    Date=17.09.15;
    Time=20:26:35;
    Modified=Yes;
    Version List=NAVW17.10,NAVRU7.10;
  }
  PROPERTIES
  {
    Permissions=;
    DataCaptionFields=No.,Description;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 GetInvtSetup;

               //olgahm 29/01/2015
                 //InvtSetup.TESTFIELD("Item Nos.");
                 //NoSeriesMgt.InitSeries(InvtSetup."Item Nos.",xRec."No. Series",0D,"No.","No. Series");

                 CASE "Item Type" OF
                   "Item Type"::Security:
                     BEGIN
                       InvtSetup.TESTFIELD("Item Nos.");
                       NoSeriesMgt.InitSeries(InvtSetup."Item Nos.", InvtSetup."Item Nos.",
                         0D,"No.", InvtSetup."Item Nos.");
                     END;
                   "Item Type"::Property:
                     BEGIN
                       InvtSetup.TESTFIELD("Property Nos.");
                       NoSeriesMgt.InitSeries(InvtSetup."Property Nos.", InvtSetup."Property Nos.",
                         0D,"No.", InvtSetup."Property Nos.");
                     END;
                   "Item Type"::Mortgage:
                     BEGIN
                       InvtSetup.TESTFIELD("Mortgage Nos.");
                       NoSeriesMgt.InitSeries(InvtSetup."Mortgage Nos.", InvtSetup."Mortgage Nos.",
                         0D,"No.", InvtSetup."Mortgage Nos.");
                     END;
                   "Item Type"::Service:
                     BEGIN
                       InvtSetup.TESTFIELD("Service Nos.");
                       NoSeriesMgt.InitSeries(InvtSetup."Service Nos.", InvtSetup."Service Nos.",
                         0D,"No.", InvtSetup."Service Nos.");
                     END;
                  //olgahm 29/01/2015
                 END;
               END;

               //olgahm 29/01/2015
               CASE "Costing Method Post" OF
                 "Costing Method Post"::FIFO:
                   "Costing Method" := "Costing Method"::FIFO;
                 "Costing Method Post"::LIFO:
                   "Costing Method" := "Costing Method"::LIFO;
                 "Costing Method Post"::Average:
                   "Costing Method" := "Costing Method"::Average;
               END;

               TESTFIELD("No.");
               //olgahm 29/01/2015

               DimMgt.UpdateDefaultDim(
                 DATABASE::Item,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               //olgahm 29/01/2015
               IF NOT "NKD Card" THEN
                 CreateNKDItemCard;

               FillPostSettings;
               //olgahm 29/01/2015
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;

               PlanningAssignment.ItemChange(Rec,xRec);
             END;

    OnDelete=VAR
               BinContent@1000 : Record 7302;
               ItemCrossReference@1001 : Record 5717;
             BEGIN
               CheckJournalsAndWorksheets(0);
               CheckDocuments(0);

               MoveEntries.MoveItemEntries(Rec);

               ServiceItem.RESET;
               ServiceItem.SETRANGE("Item No.","No.");
               IF ServiceItem.FIND('-') THEN
                 REPEAT
                   ServiceItem.VALIDATE("Item No.",'');
                   ServiceItem.MODIFY(TRUE);
                 UNTIL ServiceItem.NEXT = 0;

               ItemBudgetEntry.SETCURRENTKEY("Analysis Area","Budget Name","Item No.");
               ItemBudgetEntry.SETRANGE("Item No.","No.");
               ItemBudgetEntry.DELETEALL(TRUE);

               ItemSub.RESET;
               ItemSub.SETRANGE(Type,ItemSub.Type::Item);
               ItemSub.SETRANGE("No.","No.");
               ItemSub.DELETEALL;

               ItemSub.RESET;
               ItemSub.SETRANGE("Substitute Type",ItemSub."Substitute Type"::Item);
               ItemSub.SETRANGE("Substitute No.","No.");
               ItemSub.DELETEALL;

               SKU.RESET;
               SKU.SETCURRENTKEY("Item No.");
               SKU.SETRANGE("Item No.","No.");
               SKU.DELETEALL;

               NonstockItemMgt.NonstockItemDel(Rec);
               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Item);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               ItemVend.SETCURRENTKEY("Item No.");
               ItemVend.SETRANGE("Item No.","No.");
               ItemVend.DELETEALL;

               SalesPrice.SETRANGE("Item No.","No.");
               SalesPrice.DELETEALL;

               SalesLineDisc.SETRANGE(Type,SalesLineDisc.Type::Item);
               SalesLineDisc.SETRANGE(Code,"No.");
               SalesLineDisc.DELETEALL;

               SalesPrepmtPct.SETRANGE("Item No.","No.");
               SalesPrepmtPct.DELETEALL;

               PurchPrice.SETRANGE("Item No.","No.");
               PurchPrice.DELETEALL;

               PurchLineDisc.SETRANGE("Item No.","No.");
               PurchLineDisc.DELETEALL;

               PurchPrepmtPct.SETRANGE("Item No.","No.");
               PurchPrepmtPct.DELETEALL;

               ItemTranslation.SETRANGE("Item No.","No.");
               ItemTranslation.DELETEALL;

               ItemUnitOfMeasure.SETRANGE("Item No.","No.");
               ItemUnitOfMeasure.DELETEALL;

               ItemVariant.SETRANGE("Item No.","No.");
               ItemVariant.DELETEALL;

               ExtTextHeader.SETRANGE("Table Name",ExtTextHeader."Table Name"::Item);
               ExtTextHeader.SETRANGE("No.","No.");
               ExtTextHeader.DELETEALL(TRUE);

               ItemAnalysisViewEntry.SETRANGE("Item No.","No.");
               ItemAnalysisViewEntry.DELETEALL;

               ItemAnalysisBudgViewEntry.SETRANGE("Item No.","No.");
               ItemAnalysisBudgViewEntry.DELETEALL;

               PlanningAssignment.SETRANGE("Item No.","No.");
               PlanningAssignment.DELETEALL;

               BOMComp.RESET;
               BOMComp.SETRANGE("Parent Item No.","No.");
               BOMComp.DELETEALL;

               TroubleshSetup.RESET;
               TroubleshSetup.SETRANGE(Type,TroubleshSetup.Type::Item);
               TroubleshSetup.SETRANGE("No.","No.");
               TroubleshSetup.DELETEALL;

               ResSkillMgt.DeleteItemResSkills("No.");
               DimMgt.DeleteDefaultDim(DATABASE::Item,"No.");

               ItemIdent.RESET;
               ItemIdent.SETCURRENTKEY("Item No.");
               ItemIdent.SETRANGE("Item No.","No.");
               ItemIdent.DELETEALL;

               ServiceItemComponent.RESET;
               ServiceItemComponent.SETRANGE(Type,ServiceItemComponent.Type::Item);
               ServiceItemComponent.SETRANGE("No.","No.");
               ServiceItemComponent.MODIFYALL("No.",'');

               BinContent.SETCURRENTKEY("Item No.");
               BinContent.SETRANGE("Item No.","No.");
               BinContent.DELETEALL;

               ItemCrossReference.SETRANGE("Item No.","No.");
               ItemCrossReference.DELETEALL;
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Item;
               RUS=?????];
    LookupPageID=Page31;
    DrillDownPageID=Page31;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GetInvtSetup;
                                                                  NoSeriesMgt.TestManual(InvtSetup."Item Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              RUS=?????] }
    { 2   ;   ;No. 2               ;Code20        ;CaptionML=[ENU=No. 2;
                                                              RUS=????? 2] }
    { 3   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                  "Search Description" := Description;

                                                                IF "Created From Nonstock Item" THEN BEGIN
                                                                  NonstockItem.SETCURRENTKEY("Item No.");
                                                                  NonstockItem.SETRANGE("Item No.","No.");
                                                                  IF NonstockItem.FINDFIRST THEN
                                                                    IF NonstockItem.Description = '' THEN BEGIN
                                                                      NonstockItem.Description := Description;
                                                                      NonstockItem.MODIFY;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              RUS=??????] }
    { 4   ;   ;Search Description  ;Code50        ;CaptionML=[ENU=Search Description;
                                                              RUS=?????? ????] }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              RUS=?????? 2] }
    { 6   ;   ;Assembly BOM        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("BOM Component" WHERE (Parent Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Assembly BOM;
                                                              RUS=?????? ??????];
                                                   Editable=No }
    { 8   ;   ;Base Unit of Measure;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=VAR
                                                                UnitOfMeasure@1000 : Record 204;
                                                              BEGIN
                                                                IF "Base Unit of Measure" <> xRec."Base Unit of Measure" THEN BEGIN
                                                                  TestNoOpenEntriesExist(FIELDCAPTION("Base Unit of Measure"));

                                                                  "Sales Unit of Measure" := "Base Unit of Measure";
                                                                  "Purch. Unit of Measure" := "Base Unit of Measure";
                                                                  IF "Base Unit of Measure" <> '' THEN BEGIN
                                                                    UnitOfMeasure.GET("Base Unit of Measure");

                                                                    IF NOT ItemUnitOfMeasure.GET("No.","Base Unit of Measure") THEN BEGIN
                                                                      ItemUnitOfMeasure.INIT;
                                                                      ItemUnitOfMeasure.VALIDATE("Item No.","No.");
                                                                      ItemUnitOfMeasure.VALIDATE(Code,"Base Unit of Measure");
                                                                      ItemUnitOfMeasure."Qty. per Unit of Measure" := 1;
                                                                      ItemUnitOfMeasure.INSERT;
                                                                    END ELSE BEGIN
                                                                      IF ItemUnitOfMeasure."Qty. per Unit of Measure" <> 1 THEN
                                                                        ERROR(STRSUBSTNO(BaseUnitOfMeasureQtyMustBeOneErr,"Base Unit of Measure",ItemUnitOfMeasure."Qty. per Unit of Measure"));
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Base Unit of Measure;
                                                              RUS=??????? ?????? ???????] }
    { 9   ;   ;Price Unit Conversion;Integer      ;CaptionML=[ENU=Price Unit Conversion;
                                                              RUS=??????? ????????] }
    { 10  ;   ;Type                ;Option        ;OnValidate=VAR
                                                                ItemLedgEntry@1000 : Record 32;
                                                              BEGIN
                                                                ItemLedgEntry.RESET;
                                                                ItemLedgEntry.SETCURRENTKEY("Item No.");
                                                                ItemLedgEntry.SETRANGE("Item No.","No.");
                                                                IF NOT ItemLedgEntry.ISEMPTY THEN
                                                                  ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ItemLedgEntry.TABLECAPTION);

                                                                CheckJournalsAndWorksheets(FIELDNO(Type));
                                                                CheckDocuments(FIELDNO(Type));
                                                                IF Type = Type::Service THEN BEGIN
                                                                  CALCFIELDS("Assembly BOM");
                                                                  TESTFIELD("Assembly BOM",FALSE);

                                                                  CALCFIELDS("Stockkeeping Unit Exists");
                                                                  TESTFIELD("Stockkeeping Unit Exists",FALSE);

                                                                  VALIDATE("Assembly Policy","Assembly Policy"::"Assemble-to-Stock");
                                                                  VALIDATE("Replenishment System","Replenishment System"::Purchase);
                                                                  VALIDATE(Reserve,Reserve::Never);
                                                                  VALIDATE("Inventory Posting Group",'');
                                                                  VALIDATE("Item Tracking Code",'');
                                                                  VALIDATE("Costing Method","Costing Method"::FIFO);
                                                                  VALIDATE("Production BOM No.",'');
                                                                  VALIDATE("Routing No.",'');
                                                                  VALIDATE("Reordering Policy","Reordering Policy"::" ");
                                                                  VALIDATE("Order Tracking Policy","Order Tracking Policy"::None);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              RUS=???];
                                                   OptionCaptionML=[ENU=Inventory,Service;
                                                                    RUS=??????,????];
                                                   OptionString=Inventory,Service }
    { 11  ;   ;Inventory Posting Group;Code10     ;TableRelation="Inventory Posting Group";
                                                   OnValidate=BEGIN
                                                                IF "Inventory Posting Group" <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   CaptionML=[ENU=Inventory Posting Group;
                                                              RUS=???? ???? ???] }
    { 12  ;   ;Shelf No.           ;Code10        ;CaptionML=[ENU=Shelf No.;
                                                              RUS=????? ?????] }
    { 14  ;   ;Item Disc. Group    ;Code20        ;TableRelation="Item Discount Group";
                                                   CaptionML=[ENU=Item Disc. Group;
                                                              RUS=???? ???? ???] }
    { 15  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              RUS=??????? ???? ?? ????] }
    { 16  ;   ;Statistics Group    ;Integer       ;CaptionML=[ENU=Statistics Group;
                                                              RUS=???????? ????] }
    { 17  ;   ;Commission Group    ;Integer       ;CaptionML=[ENU=Commission Group;
                                                              RUS=???? ??????????] }
    { 18  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              RUS=???? ???????];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 19  ;   ;Price/Profit Calculation;Option    ;OnValidate=BEGIN
                                                                CASE "Price/Profit Calculation" OF
                                                                  "Price/Profit Calculation"::"Profit=Price-Cost":
                                                                    IF "Unit Price" <> 0 THEN
                                                                      IF "Unit Cost" = 0 THEN
                                                                        "Profit %" := 0
                                                                      ELSE
                                                                        "Profit %" :=
                                                                          ROUND(
                                                                            100 * (1 - "Unit Cost" /
                                                                                   ("Unit Price" / (1 + CalcVAT))),0.00001)
                                                                    ELSE
                                                                      "Profit %" := 0;
                                                                  "Price/Profit Calculation"::"Price=Cost+Profit":
                                                                    IF "Profit %" < 100 THEN BEGIN
                                                                      GetGLSetup;
                                                                      "Unit Price" :=
                                                                        ROUND(
                                                                          ("Unit Cost" / (1 - "Profit %" / 100)) *
                                                                          (1 + CalcVAT),
                                                                          GLSetup."Unit-Amount Rounding Precision");
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price/Profit Calculation;
                                                              RUS=????? ??/???];
                                                   OptionCaptionML=[ENU="Profit=Price-Cost,Price=Cost+Profit,No Relationship";
                                                                    RUS="????=??-?????????,????=?????????+????,??? ??"];
                                                   OptionString=Profit=Price-Cost,Price=Cost+Profit,No Relationship }
    { 20  ;   ;Profit %            ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Profit %;
                                                              RUS=???? (%)];
                                                   DecimalPlaces=0:5 }
    { 21  ;   ;Costing Method      ;Option        ;OnValidate=BEGIN
                                                                IF "Costing Method" = xRec."Costing Method" THEN
                                                                  EXIT;

                                                                IF "Costing Method" <> "Costing Method"::FIFO THEN
                                                                  TESTFIELD(Type,Type::Inventory);

                                                                IF "Costing Method" = "Costing Method"::Specific THEN BEGIN
                                                                  TESTFIELD("Item Tracking Code");

                                                                  ItemTrackingCode.GET("Item Tracking Code");
                                                                  IF NOT ItemTrackingCode."SN Specific Tracking" THEN
                                                                    ERROR(
                                                                      Text018,
                                                                      ItemTrackingCode.FIELDCAPTION("SN Specific Tracking"),
                                                                      FORMAT(TRUE),ItemTrackingCode.TABLECAPTION,ItemTrackingCode.Code,
                                                                      FIELDCAPTION("Costing Method"),"Costing Method");
                                                                END;

                                                                TestNoEntriesExist(FIELDCAPTION("Costing Method"));

                                                                ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Costing Method"));
                                                              END;

                                                   CaptionML=[ENU=Costing Method;
                                                              RUS=??? ??? ????????];
                                                   OptionCaptionML=[ENU=FIFO,LIFO,Specific,Average,Standard;
                                                                    RUS=FIFO,LIFO,?? ???? ?????,?? ?????,?? ???????];
                                                   OptionString=FIFO,LIFO,Specific,Average,Standard }
    { 22  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                IF "Costing Method" = "Costing Method"::Standard THEN
                                                                  VALIDATE("Standard Cost","Unit Cost")
                                                                ELSE
                                                                  TestNoEntriesExist(FIELDCAPTION("Unit Cost"));
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Unit Cost;
                                                              RUS=??????????? ???????];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 24  ;   ;Standard Cost       ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Costing Method" = "Costing Method"::Standard) AND (CurrFieldNo <> 0) THEN
                                                                  IF NOT GUIALLOWED THEN BEGIN
                                                                    "Standard Cost" := xRec."Standard Cost";
                                                                    EXIT;
                                                                  END ELSE
                                                                    IF NOT
                                                                       CONFIRM(
                                                                         Text020 +
                                                                         Text021 +
                                                                         Text022,FALSE,
                                                                         FIELDCAPTION("Standard Cost"))
                                                                    THEN BEGIN
                                                                      "Standard Cost" := xRec."Standard Cost";
                                                                      EXIT;
                                                                    END;

                                                                ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Standard Cost"));
                                                              END;

                                                   CaptionML=[ENU=Standard Cost;
                                                              RUS=??????? ?????????];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 25  ;   ;Last Direct Cost    ;Decimal       ;CaptionML=[ENU=Last Direct Cost;
                                                              RUS=???. ???? ??????];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 28  ;   ;Indirect Cost %     ;Decimal       ;OnValidate=BEGIN
                                                                ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Indirect Cost %"));
                                                              END;

                                                   CaptionML=[ENU=Indirect Cost %;
                                                              RUS=?????? ?????? (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 29  ;   ;Cost is Adjusted    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Cost is Adjusted;
                                                              RUS=??????????? ????????];
                                                   Editable=No }
    { 30  ;   ;Allow Online Adjustment;Boolean    ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Online Adjustment;
                                                              RUS=??????? ???????? ??????];
                                                   Editable=No }
    { 31  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF (xRec."Vendor No." <> "Vendor No.") AND
                                                                   ("Vendor No." <> '')
                                                                THEN
                                                                  IF Vend.GET("Vendor No.") THEN
                                                                    "Lead Time Calculation" := Vend."Lead Time Calculation";
                                                              END;

                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Vendor No.;
                                                              RUS=??? ??????] }
    { 32  ;   ;Vendor Item No.     ;Text20        ;CaptionML=[ENU=Vendor Item No.;
                                                              RUS=??? ??? ??????] }
    { 33  ;   ;Lead Time Calculation;DateFormula  ;CaptionML=[ENU=Lead Time Calculation;
                                                              RUS=????? ????? ???????? ??????] }
    { 34  ;   ;Reorder Point       ;Decimal       ;CaptionML=[ENU=Reorder Point;
                                                              RUS=??? ????????];
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Maximum Inventory   ;Decimal       ;CaptionML=[ENU=Maximum Inventory;
                                                              RUS=???????? ?????];
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Reorder Quantity    ;Decimal       ;CaptionML=[ENU=Reorder Quantity;
                                                              RUS=???-?? ??? ????????];
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Alternative Item No.;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Alternative Item No.;
                                                              RUS=??? ?????????? ???] }
    { 38  ;   ;Unit List Price     ;Decimal       ;CaptionML=[ENU=Unit List Price;
                                                              RUS=??????????? ??];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 39  ;   ;Duty Due %          ;Decimal       ;CaptionML=[ENU=Duty Due %;
                                                              RUS=?????????? ????? (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 40  ;   ;Duty Code           ;Code10        ;CaptionML=[ENU=Duty Code;
                                                              RUS=??? ???????? ?????] }
    { 41  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              RUS=??? ?????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 42  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              RUS=??? ????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 43  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              RUS=???-?? ?????? ? ??????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 44  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              RUS=??? ???????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 45  ;   ;Durability          ;Code10        ;CaptionML=[ENU=Durability;
                                                              RUS=?? ???] }
    { 46  ;   ;Freight Type        ;Code10        ;CaptionML=[ENU=Freight Type;
                                                              RUS=??? ???????] }
    { 47  ;   ;Tariff No.          ;Code20        ;TableRelation="Tariff Number";
                                                   CaptionML=[ENU=Tariff No.;
                                                              RUS=??? ???] }
    { 48  ;   ;Duty Unit Conversion;Decimal       ;CaptionML=[ENU=Duty Unit Conversion;
                                                              RUS=????????? ???????? ????????];
                                                   DecimalPlaces=0:5 }
    { 49  ;   ;Country/Region Purchased Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Purchased Code;
                                                              RUS=??? ????/????? ???????] }
    { 50  ;   ;Budget Quantity     ;Decimal       ;CaptionML=[ENU=Budget Quantity;
                                                              RUS=???????? ???????];
                                                   DecimalPlaces=0:5 }
    { 51  ;   ;Budgeted Amount     ;Decimal       ;CaptionML=[ENU=Budgeted Amount;
                                                              RUS=??? ????];
                                                   AutoFormatType=1 }
    { 52  ;   ;Budget Profit       ;Decimal       ;CaptionML=[ENU=Budget Profit;
                                                              RUS=???????? ????];
                                                   AutoFormatType=1 }
    { 53  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Item),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=????????];
                                                   Editable=No }
    { 54  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              RUS=???????????] }
    { 55  ;   ;Cost is Posted to G/L;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=-Exist("Post Value Entry to G/L" WHERE (Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Cost is Posted to G/L;
                                                              RUS=??????????? ???? ? ??];
                                                   Editable=No }
    { 62  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              RUS=??? ???????? ?????????];
                                                   Editable=No }
    { 64  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=?????? ?? ???] }
    { 65  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              RUS=?????? ????????? ??????? 1];
                                                   CaptionClass='1,3,1' }
    { 66  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              RUS=?????? ????????? ??????? 2];
                                                   CaptionClass='1,3,2' }
    { 67  ;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Location;
                                                   CaptionML=[ENU=Location Filter;
                                                              RUS=?????? ?? ????] }
    { 68  ;   ;Inventory           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry".Quantity WHERE (Item No.=FIELD(No.),
                                                                                                       Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                       Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                       Location Code=FIELD(Location Filter),
                                                                                                       Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                       Variant Code=FIELD(Variant Filter),
                                                                                                       Lot No.=FIELD(Lot No. Filter),
                                                                                                       Serial No.=FIELD(Serial No. Filter),
                                                                                                       CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Inventory;
                                                              RUS=??????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 69  ;   ;Net Invoiced Qty.   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter),
                                                                                                                  CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Net Invoiced Qty.;
                                                              RUS=???-?? ? ?????? ????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 70  ;   ;Net Change          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry".Quantity WHERE (Item No.=FIELD(No.),
                                                                                                       Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                       Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                       Location Code=FIELD(Location Filter),
                                                                                                       Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                       Variant Code=FIELD(Variant Filter),
                                                                                                       Lot No.=FIELD(Lot No. Filter),
                                                                                                       Serial No.=FIELD(Serial No. Filter),
                                                                                                       CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Net Change;
                                                              RUS=?????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 71  ;   ;Purchases (Qty.)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Purchase),
                                                                                                                  Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter),
                                                                                                                  CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Purchases (Qty.);
                                                              RUS=????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 72  ;   ;Sales (Qty.)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Value Entry"."Invoiced Quantity" WHERE (Item Ledger Entry Type=CONST(Sale),
                                                                                                             Item No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                             Location Code=FIELD(Location Filter),
                                                                                                             Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                             Variant Code=FIELD(Variant Filter),
                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Sales (Qty.);
                                                              RUS=????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 73  ;   ;Positive Adjmt. (Qty.);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Positive Adjmt.),
                                                                                                                  Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter),
                                                                                                                  CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Positive Adjmt. (Qty.);
                                                              RUS=??? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 74  ;   ;Negative Adjmt. (Qty.);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Negative Adjmt.),
                                                                                                                   Item No.=FIELD(No.),
                                                                                                                   Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Location Code=FIELD(Location Filter),
                                                                                                                   Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Posting Date=FIELD(Date Filter),
                                                                                                                   Lot No.=FIELD(Lot No. Filter),
                                                                                                                   Serial No.=FIELD(Serial No. Filter),
                                                                                                                   CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Negative Adjmt. (Qty.);
                                                              RUS=???? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 77  ;   ;Purchases (LCY)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Purchase Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Purchase),
                                                                                                                   Item No.=FIELD(No.),
                                                                                                                   Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Location Code=FIELD(Location Filter),
                                                                                                                   Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Purchases (LCY);
                                                              RUS=????? (??.)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 78  ;   ;Sales (LCY)         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Sale),
                                                                                                                Item No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Sales (LCY);
                                                              RUS=????? (??.)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 79  ;   ;Positive Adjmt. (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Positive Adjmt.),
                                                                                                               Item No.=FIELD(No.),
                                                                                                               Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Positive Adjmt. (LCY);
                                                              RUS=??? (??.)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 80  ;   ;Negative Adjmt. (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Negative Adjmt.),
                                                                                                               Item No.=FIELD(No.),
                                                                                                               Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Negative Adjmt. (LCY);
                                                              RUS=???? (??.)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 83  ;   ;COGS (LCY)          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Sale),
                                                                                                                Item No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=COGS (LCY);
                                                              RUS=??????. ??. (??.)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 84  ;   ;Qty. on Purch. Order;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                    Type=CONST(Item),
                                                                                                                    No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Location Code=FIELD(Location Filter),
                                                                                                                    Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Purch. Order;
                                                              RUS=???-?? ? ??????? ?? ?????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 85  ;   ;Qty. on Sales Order ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                 Type=CONST(Item),
                                                                                                                 No.=FIELD(No.),
                                                                                                                 Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                 Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Sales Order;
                                                              RUS=???-?? ? ??????? ?? ?????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 87  ;   ;Price Includes VAT  ;Boolean       ;OnValidate=VAR
                                                                VATPostingSetup@1000 : Record 325;
                                                                SalesSetup@1001 : Record 311;
                                                              BEGIN
                                                                IF "Price Includes VAT" THEN BEGIN
                                                                  SalesSetup.GET;
                                                                  IF SalesSetup."VAT Bus. Posting Gr. (Price)" <> '' THEN
                                                                    "VAT Bus. Posting Gr. (Price)" := SalesSetup."VAT Bus. Posting Gr. (Price)";
                                                                  VATPostingSetup.GET("VAT Bus. Posting Gr. (Price)","VAT Prod. Posting Group");
                                                                END;
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Price Includes VAT;
                                                              RUS=???? ?????? ???] }
    { 89  ;   ;Drop Shipment Filter;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Drop Shipment Filter;
                                                              RUS=?????? ?? ???? ??????] }
    { 90  ;   ;VAT Bus. Posting Gr. (Price);Code10;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=VAT Bus. Posting Gr. (Price);
                                                              RUS=??? ??????-???? (??)] }
    { 91  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN BEGIN
                                                                  IF CurrFieldNo <> 0 THEN
                                                                    IF ProdOrderExist THEN
                                                                      IF NOT CONFIRM(
                                                                           Text024 +
                                                                           Text022,FALSE,
                                                                           FIELDCAPTION("Gen. Prod. Posting Group"))
                                                                      THEN BEGIN
                                                                        "Gen. Prod. Posting Group" := xRec."Gen. Prod. Posting Group";
                                                                        EXIT;
                                                                      END;

                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                                END;

                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              RUS=???? ???? ????] }
    { 92  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              RUS=?????????];
                                                   SubType=Bitmap }
    { 93  ;   ;Transferred (Qty.)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry"."Invoiced Quantity" WHERE (Entry Type=CONST(Transfer),
                                                                                                                  Item No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Location Code=FIELD(Location Filter),
                                                                                                                  Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                  Variant Code=FIELD(Variant Filter),
                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                  Lot No.=FIELD(Lot No. Filter),
                                                                                                                  Serial No.=FIELD(Serial No. Filter),
                                                                                                                  CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Transferred (Qty.);
                                                              RUS=?????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 94  ;   ;Transferred (LCY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Transfer),
                                                                                                                Item No.=FIELD(No.),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Drop Shipment=FIELD(Drop Shipment Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Transferred (LCY);
                                                              RUS=?????? (??.)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 95  ;   ;Country/Region of Origin Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region of Origin Code;
                                                              RUS=??? ????/????? ?????????] }
    { 96  ;   ;Automatic Ext. Texts;Boolean       ;CaptionML=[ENU=Automatic Ext. Texts;
                                                              RUS=???. ????? ???. ???] }
    { 97  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=???? ?????];
                                                   Editable=No }
    { 98  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              RUS=??? ????????? ????] }
    { 99  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              RUS=??? ???? ????] }
    { 100 ;   ;Reserve             ;Option        ;InitValue=Optional;
                                                   OnValidate=BEGIN
                                                                IF Reserve <> Reserve::Never THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   CaptionML=[ENU=Reserve;
                                                              RUS=?????????];
                                                   OptionCaptionML=[ENU=Never,Optional,Always;
                                                                    RUS=?????,?????,?????];
                                                   OptionString=Never,Optional,Always }
    { 101 ;   ;Reserved Qty. on Inventory;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(32),
                                                                                                                Source Subtype=CONST(0),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Serial No.=FIELD(Serial No. Filter),
                                                                                                                Lot No.=FIELD(Lot No. Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                CD No.=FIELD(CD No. Filter)));
                                                   CaptionML=[ENU=Reserved Qty. on Inventory;
                                                              RUS=??????. ???-?? ?? ????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 102 ;   ;Reserved Qty. on Purch. Orders;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(39),
                                                                                                                Source Subtype=CONST(1),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Reserved Qty. on Purch. Orders;
                                                              RUS=?????. ???-?? ? ??????? ?? ?????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 103 ;   ;Reserved Qty. on Sales Orders;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(37),
                                                                                                                 Source Subtype=CONST(1),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Reserved Qty. on Sales Orders;
                                                              RUS=??????????? ???-?? ? ??????? ?? ?????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 105 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=??? ????????? ??????? 1];
                                                   CaptionClass='1,1,1' }
    { 106 ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=??? ????????? ??????? 2];
                                                   CaptionClass='1,1,2' }
    { 107 ;   ;Res. Qty. on Outbound Transfer;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(5741),
                                                                                                                 Source Subtype=CONST(0),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on Outbound Transfer;
                                                              RUS=??????????? ???-?? ? ?????? ????????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 108 ;   ;Res. Qty. on Inbound Transfer;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(5741),
                                                                                                                Source Subtype=CONST(1),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on Inbound Transfer;
                                                              RUS=??????????? ???-?? ?? ????? ????????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 120 ;   ;Stockout Warning    ;Option        ;CaptionML=[ENU=Stockout Warning;
                                                              RUS=????????? ? ????? ?????];
                                                   OptionCaptionML=[ENU=Default,No,Yes;
                                                                    RUS=?? ?????,???,??];
                                                   OptionString=Default,No,Yes }
    { 121 ;   ;Prevent Negative Inventory;Option  ;CaptionML=[ENU=Prevent Negative Inventory;
                                                              RUS=??????? ??????? ????];
                                                   OptionCaptionML=[ENU=Default,No,Yes;
                                                                    RUS=?? ?????,???,??];
                                                   OptionString=Default,No,Yes }
    { 200 ;   ;Cost of Open Production Orders;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Cost Amount" WHERE (Status=FILTER(Planned|Firm Planned|Released),
                                                                                                           Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Cost of Open Production Orders;
                                                              RUS=??????? ??????? ???????????? ???????] }
    { 521 ;   ;Application Wksh. User ID;Code128  ;CaptionML=[ENU=Application Wksh. User ID;
                                                              RUS=??? ???????? ????? ????????] }
    { 910 ;   ;Assembly Policy     ;Option        ;OnValidate=BEGIN
                                                                IF "Assembly Policy" = "Assembly Policy"::"Assemble-to-Order" THEN
                                                                  TESTFIELD("Replenishment System","Replenishment System"::Assembly);
                                                                IF Type = Type::Service THEN
                                                                  TESTFIELD("Assembly Policy","Assembly Policy"::"Assemble-to-Stock");
                                                              END;

                                                   CaptionML=[ENU=Assembly Policy;
                                                              RUS=?????? ??];
                                                   OptionCaptionML=[ENU=Assemble-to-Stock,Assemble-to-Order;
                                                                    RUS=???? ?? ???,???? ?? ?????];
                                                   OptionString=Assemble-to-Stock,Assemble-to-Order }
    { 929 ;   ;Res. Qty. on Assembly Order;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(900),
                                                                                                                Source Subtype=CONST(1),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on Assembly Order;
                                                              RUS=???-?? ????? ? ?????? ?? ???];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 930 ;   ;Res. Qty. on  Asm. Comp.;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(901),
                                                                                                                 Source Subtype=CONST(1),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on  Asm. Comp.;
                                                              RUS=??????? ????? ? ????????? ??];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 977 ;   ;Qty. on Assembly Order;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Header"."Remaining Quantity (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                        Item No.=FIELD(No.),
                                                                                                                        Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                        Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                        Location Code=FIELD(Location Filter),
                                                                                                                        Variant Code=FIELD(Variant Filter),
                                                                                                                        Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Assembly Order;
                                                              RUS=???-?? ? ?????? ?? ???];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 978 ;   ;Qty. on Asm. Component;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Line"."Remaining Quantity (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                      Type=CONST(Item),
                                                                                                                      No.=FIELD(No.),
                                                                                                                      Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                      Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                      Location Code=FIELD(Location Filter),
                                                                                                                      Variant Code=FIELD(Variant Filter),
                                                                                                                      Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Asm. Component;
                                                              RUS=??????? ? ????????? ??];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1001;   ;Qty. on Job Order   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Order),
                                                                                                                      Type=CONST(Item),
                                                                                                                      No.=FIELD(No.),
                                                                                                                      Location Code=FIELD(Location Filter),
                                                                                                                      Variant Code=FIELD(Variant Filter),
                                                                                                                      Planning Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Job Order;
                                                              RUS=???-?? ? ??? ??????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 1002;   ;Res. Qty. on Job Order;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(1003),
                                                                                                                 Source Subtype=CONST(2),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on Job Order;
                                                              RUS=??????? ????? ? ?????? ???????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5400;   ;Low-Level Code      ;Integer       ;CaptionML=[ENU=Low-Level Code;
                                                              RUS=??? ???. ????];
                                                   Editable=No }
    { 5401;   ;Lot Size            ;Decimal       ;CaptionML=[ENU=Lot Size;
                                                              RUS=?????? ????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5402;   ;Serial Nos.         ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Serial Nos." <> '' THEN
                                                                  TESTFIELD("Item Tracking Code");
                                                              END;

                                                   CaptionML=[ENU=Serial Nos.;
                                                              RUS=????? ?????] }
    { 5403;   ;Last Unit Cost Calc. Date;Date     ;CaptionML=[ENU=Last Unit Cost Calc. Date;
                                                              RUS=??? ???. ???? ????. ???????];
                                                   Editable=No }
    { 5404;   ;Rolled-up Material Cost;Decimal    ;CaptionML=[ENU=Rolled-up Material Cost;
                                                              RUS=????????? ????. ???????];
                                                   DecimalPlaces=2:5;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5405;   ;Rolled-up Capacity Cost;Decimal    ;CaptionML=[ENU=Rolled-up Capacity Cost;
                                                              RUS=????????? ??????? ????. ?????];
                                                   DecimalPlaces=2:5;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 5407;   ;Scrap %             ;Decimal       ;CaptionML=[ENU=Scrap %;
                                                              RUS=?? (%)];
                                                   DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5409;   ;Inventory Value Zero;Boolean       ;OnValidate=BEGIN
                                                                CheckForProductionOutput("No.");
                                                              END;

                                                   CaptionML=[ENU=Inventory Value Zero;
                                                              RUS=????? ??????? ?????] }
    { 5410;   ;Discrete Order Quantity;Integer    ;CaptionML=[ENU=Discrete Order Quantity;
                                                              RUS=?????????? ???-?? ??????];
                                                   MinValue=0 }
    { 5411;   ;Minimum Order Quantity;Decimal     ;CaptionML=[ENU=Minimum Order Quantity;
                                                              RUS=????????? ???-?? ??????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5412;   ;Maximum Order Quantity;Decimal     ;CaptionML=[ENU=Maximum Order Quantity;
                                                              RUS=???????? ???-?? ??????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5413;   ;Safety Stock Quantity;Decimal      ;CaptionML=[ENU=Safety Stock Quantity;
                                                              RUS=???-?? ??????? ?????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5414;   ;Order Multiple      ;Decimal       ;CaptionML=[ENU=Order Multiple;
                                                              RUS=???????? ?????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5415;   ;Safety Lead Time    ;DateFormula   ;CaptionML=[ENU=Safety Lead Time;
                                                              RUS=?????? ????? ????? ????????] }
    { 5417;   ;Flushing Method     ;Option        ;CaptionML=[ENU=Flushing Method;
                                                              RUS=??? ????];
                                                   OptionCaptionML=[ENU=Manual,Forward,Backward,Pick + Forward,Pick + Backward;
                                                                    RUS=????,????,?????,?????? + ????,?????? + ?????];
                                                   OptionString=Manual,Forward,Backward,Pick + Forward,Pick + Backward }
    { 5419;   ;Replenishment System;Option        ;OnValidate=BEGIN
                                                                IF "Replenishment System" <> "Replenishment System"::Assembly THEN
                                                                  TESTFIELD("Assembly Policy","Assembly Policy"::"Assemble-to-Stock");
                                                                IF "Replenishment System" <> "Replenishment System"::Purchase THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   CaptionML=[ENU=Replenishment System;
                                                              RUS=??? ??????????];
                                                   OptionCaptionML=[ENU=Purchase,Prod. Order,,Assembly;
                                                                    RUS=?????,????. ?????,,????];
                                                   OptionString=Purchase,Prod. Order,,Assembly }
    { 5420;   ;Scheduled Receipt (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=FILTER(Firm Planned|Released),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Scheduled Receipt (Qty.);
                                                              RUS=????????. ????????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5421;   ;Scheduled Need (Qty.);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Remaining Qty. (Base)" WHERE (Status=FILTER(Planned..Released),
                                                                                                                          Item No.=FIELD(No.),
                                                                                                                          Variant Code=FIELD(Variant Filter),
                                                                                                                          Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                          Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                          Location Code=FIELD(Location Filter),
                                                                                                                          Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Scheduled Need (Qty.);
                                                              RUS=???????? ????????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5422;   ;Rounding Precision  ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF "Rounding Precision" <= 0 THEN
                                                                  FIELDERROR("Rounding Precision",Text027);
                                                              END;

                                                   CaptionML=[ENU=Rounding Precision;
                                                              RUS=?????? ????????];
                                                   DecimalPlaces=0:5 }
    { 5423;   ;Bin Filter          ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Filter));
                                                   CaptionML=[ENU=Bin Filter;
                                                              RUS=?????? ?? ????] }
    { 5424;   ;Variant Filter      ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Filter;
                                                              RUS=?????? ?? ??????] }
    { 5425;   ;Sales Unit of Measure;Code10       ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Sales Unit of Measure;
                                                              RUS=?????? ??????? ????] }
    { 5426;   ;Purch. Unit of Measure;Code10      ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Purch. Unit of Measure;
                                                              RUS=?????? ??????? ?????] }
    { 5428;   ;Time Bucket         ;DateFormula   ;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Time Bucket");
                                                              END;

                                                   CaptionML=[ENU=Time Bucket;
                                                              RUS=?????? ??????????] }
    { 5429;   ;Reserved Qty. on Prod. Order;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(5406),
                                                                                                                Source Subtype=FILTER(1..3),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Reserved Qty. on Prod. Order;
                                                              RUS=??????. ???-?? ?? ????. ???????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5430;   ;Res. Qty. on Prod. Order Comp.;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(5407),
                                                                                                                 Source Subtype=FILTER(1..3),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on Prod. Order Comp.;
                                                              RUS=??????. ???-?? ? ???. ??????? ?????????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5431;   ;Res. Qty. on Req. Line;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                Source Type=CONST(246),
                                                                                                                Source Subtype=FILTER(0),
                                                                                                                Reservation Status=CONST(Reservation),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Variant Code=FIELD(Variant Filter),
                                                                                                                Expected Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on Req. Line;
                                                              RUS=??????????? ???-?? ? ???? ????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5440;   ;Reordering Policy   ;Option        ;OnValidate=BEGIN
                                                                "Include Inventory" :=
                                                                  "Reordering Policy" IN ["Reordering Policy"::"Lot-for-Lot",
                                                                                          "Reordering Policy"::"Maximum Qty.",
                                                                                          "Reordering Policy"::"Fixed Reorder Qty."];

                                                                IF "Reordering Policy" <> "Reordering Policy"::" " THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                              END;

                                                   CaptionML=[ENU=Reordering Policy;
                                                              RUS=?????? ????????];
                                                   OptionCaptionML=[ENU=" ,Fixed Reorder Qty.,Maximum Qty.,Order,Lot-for-Lot";
                                                                    RUS=" ,????. ???-?? ????????,???????? ???-??,?????,????? ?? ?????"];
                                                   OptionString=[ ,Fixed Reorder Qty.,Maximum Qty.,Order,Lot-for-Lot] }
    { 5441;   ;Include Inventory   ;Boolean       ;CaptionML=[ENU=Include Inventory;
                                                              RUS=???. ?????] }
    { 5442;   ;Manufacturing Policy;Option        ;CaptionML=[ENU=Manufacturing Policy;
                                                              RUS=?????? ????????];
                                                   OptionCaptionML=[ENU=Make-to-Stock,Make-to-Order;
                                                                    RUS=?????????? ?? ???,?????????? ?? ?????];
                                                   OptionString=Make-to-Stock,Make-to-Order }
    { 5443;   ;Rescheduling Period ;DateFormula   ;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Rescheduling Period");
                                                              END;

                                                   CaptionML=[ENU=Rescheduling Period;
                                                              RUS=???? ????????????] }
    { 5444;   ;Lot Accumulation Period;DateFormula;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Lot Accumulation Period");
                                                              END;

                                                   CaptionML=[ENU=Lot Accumulation Period;
                                                              RUS=???? ?????????? ???] }
    { 5445;   ;Dampener Period     ;DateFormula   ;OnValidate=BEGIN
                                                                CalendarMgt.CheckDateFormulaPositive("Dampener Period");
                                                              END;

                                                   CaptionML=[ENU=Dampener Period;
                                                              RUS=????? ????] }
    { 5446;   ;Dampener Quantity   ;Decimal       ;CaptionML=[ENU=Dampener Quantity;
                                                              RUS=????? ???????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5447;   ;Overflow Level      ;Decimal       ;CaptionML=[ENU=Overflow Level;
                                                              RUS=??????? ?????];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5700;   ;Stockkeeping Unit Exists;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Stockkeeping Unit" WHERE (Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Stockkeeping Unit Exists;
                                                              RUS=???? ?????? ??????];
                                                   Editable=No }
    { 5701;   ;Manufacturer Code   ;Code10        ;TableRelation=Manufacturer;
                                                   CaptionML=[ENU=Manufacturer Code;
                                                              RUS=??? ?????????] }
    { 5702;   ;Item Category Code  ;Code10        ;TableRelation="Item Category";
                                                   OnValidate=BEGIN
                                                                IF "Item Category Code" <> xRec."Item Category Code" THEN BEGIN
                                                                  IF ItemCategory.GET("Item Category Code") THEN BEGIN
                                                                    IF "Gen. Prod. Posting Group" = '' THEN
                                                                      VALIDATE("Gen. Prod. Posting Group",ItemCategory."Def. Gen. Prod. Posting Group");
                                                                    IF ("VAT Prod. Posting Group" = '') OR
                                                                       (GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") AND
                                                                        ("Gen. Prod. Posting Group" = ItemCategory."Def. Gen. Prod. Posting Group") AND
                                                                        ("VAT Prod. Posting Group" = GenProdPostingGrp."Def. VAT Prod. Posting Group"))
                                                                    THEN
                                                                      VALIDATE("VAT Prod. Posting Group",ItemCategory."Def. VAT Prod. Posting Group");
                                                                    IF "Inventory Posting Group" = '' THEN
                                                                      VALIDATE("Inventory Posting Group",ItemCategory."Def. Inventory Posting Group");
                                                                    IF "Tax Group Code" = '' THEN
                                                                      VALIDATE("Tax Group Code",ItemCategory."Def. Tax Group Code");
                                                                    VALIDATE("Costing Method",ItemCategory."Def. Costing Method");
                                                                  END;

                                                                  IF NOT ProductGrp.GET("Item Category Code","Product Group Code") THEN
                                                                    VALIDATE("Product Group Code",'')
                                                                  ELSE
                                                                    VALIDATE("Product Group Code");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Item Category Code;
                                                              RUS=??? ???? ?????] }
    { 5703;   ;Created From Nonstock Item;Boolean ;CaptionML=[ENU=Created From Nonstock Item;
                                                              RUS=??????? ?? ??????????? ???];
                                                   Editable=No }
    { 5704;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              RUS=??? ???? ????] }
    { 5706;   ;Substitutes Exist   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Item Substitution" WHERE (Type=CONST(Item),
                                                                                                No.=FIELD(No.)));
                                                   CaptionML=[ENU=Substitutes Exist;
                                                              RUS=????? ?????????];
                                                   Editable=No }
    { 5707;   ;Qty. in Transit     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Transfer Line"."Qty. in Transit (Base)" WHERE (Derived From Line No.=CONST(0),
                                                                                                                   Item No.=FIELD(No.),
                                                                                                                   Transfer-to Code=FIELD(Location Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. in Transit;
                                                              RUS=???-?? ? ???];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5708;   ;Trans. Ord. Receipt (Qty.);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Transfer Line"."Outstanding Qty. (Base)" WHERE (Derived From Line No.=CONST(0),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Transfer-to Code=FIELD(Location Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Receipt Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Trans. Ord. Receipt (Qty.);
                                                              RUS=????. ???-?? ??? ?????. ?? ?????? ?? ?????.];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5709;   ;Trans. Ord. Shipment (Qty.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Transfer Line"."Outstanding Qty. (Base)" WHERE (Derived From Line No.=CONST(0),
                                                                                                                    Item No.=FIELD(No.),
                                                                                                                    Transfer-from Code=FIELD(Location Filter),
                                                                                                                    Variant Code=FIELD(Variant Filter),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Trans. Ord. Shipment (Qty.);
                                                              RUS=????. ???-?? ??? ????? ?? ?????? ?? ?????.];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5776;   ;Qty. Assigned to ship;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Shipment Line"."Qty. Outstanding (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                              Location Code=FIELD(Location Filter),
                                                                                                                              Variant Code=FIELD(Variant Filter),
                                                                                                                              Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. Assigned to ship;
                                                              RUS=???-??, ????????? ??? ?????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5777;   ;Qty. Picked         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Shipment Line"."Qty. Picked (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                         Location Code=FIELD(Location Filter),
                                                                                                                         Variant Code=FIELD(Variant Filter),
                                                                                                                         Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. Picked;
                                                              RUS=??????. ???-??];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5900;   ;Service Item Group  ;Code10        ;TableRelation="Service Item Group".Code;
                                                   OnValidate=VAR
                                                                ResSkill@1000 : Record 5956;
                                                              BEGIN
                                                                IF xRec."Service Item Group" <> "Service Item Group" THEN BEGIN
                                                                  IF NOT ResSkillMgt.ChangeRelationWithGroup(
                                                                       ResSkill.Type::Item,
                                                                       "No.",
                                                                       ResSkill.Type::"Service Item Group",
                                                                       "Service Item Group",
                                                                       xRec."Service Item Group")
                                                                  THEN
                                                                    "Service Item Group" := xRec."Service Item Group";
                                                                END ELSE
                                                                  ResSkillMgt.RevalidateRelation(
                                                                    ResSkill.Type::Item,
                                                                    "No.",
                                                                    ResSkill.Type::"Service Item Group",
                                                                    "Service Item Group")
                                                              END;

                                                   CaptionML=[ENU=Service Item Group;
                                                              RUS=???? ????? ???] }
    { 5901;   ;Qty. on Service Order;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                   Type=CONST(Item),
                                                                                                                   No.=FIELD(No.),
                                                                                                                   Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Location Code=FIELD(Location Filter),
                                                                                                                   Variant Code=FIELD(Variant Filter),
                                                                                                                   Needed by Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Service Order;
                                                              RUS=???-?? ? ??. ???????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5902;   ;Res. Qty. on Service Orders;Decimal;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry"."Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                 Source Type=CONST(5902),
                                                                                                                 Source Subtype=CONST(1),
                                                                                                                 Reservation Status=CONST(Reservation),
                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                 Variant Code=FIELD(Variant Filter),
                                                                                                                 Shipment Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Res. Qty. on Service Orders;
                                                              RUS=??????. ???-?? ? ????? ???????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 6500;   ;Item Tracking Code  ;Code10        ;TableRelation="Item Tracking Code";
                                                   OnValidate=BEGIN
                                                                IF "Item Tracking Code" <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                                IF "Item Tracking Code" = xRec."Item Tracking Code" THEN
                                                                  EXIT;

                                                                IF NOT ItemTrackingCode.GET("Item Tracking Code") THEN
                                                                  CLEAR(ItemTrackingCode);

                                                                IF NOT ItemTrackingCode2.GET(xRec."Item Tracking Code") THEN
                                                                  CLEAR(ItemTrackingCode2);

                                                                IF (ItemTrackingCode."SN Specific Tracking" <> ItemTrackingCode2."SN Specific Tracking") OR
                                                                   (ItemTrackingCode."Lot Specific Tracking" <> ItemTrackingCode2."Lot Specific Tracking")
                                                                THEN
                                                                  TestNoEntriesExist(FIELDCAPTION("Item Tracking Code"));

                                                                IF "Costing Method" = "Costing Method"::Specific THEN BEGIN
                                                                  TestNoEntriesExist(FIELDCAPTION("Item Tracking Code"));

                                                                  TESTFIELD("Item Tracking Code");

                                                                  ItemTrackingCode.GET("Item Tracking Code");
                                                                  IF NOT ItemTrackingCode."SN Specific Tracking" THEN
                                                                    ERROR(
                                                                      Text018,
                                                                      ItemTrackingCode.FIELDCAPTION("SN Specific Tracking"),
                                                                      FORMAT(TRUE),ItemTrackingCode.TABLECAPTION,ItemTrackingCode.Code,
                                                                      FIELDCAPTION("Costing Method"),"Costing Method");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Item Tracking Code;
                                                              RUS=??? ??????? ???] }
    { 6501;   ;Lot Nos.            ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Lot Nos." <> '' THEN
                                                                  TESTFIELD("Item Tracking Code");
                                                              END;

                                                   CaptionML=[ENU=Lot Nos.;
                                                              RUS=???? ????? ????] }
    { 6502;   ;Expiration Calculation;DateFormula ;CaptionML=[ENU=Expiration Calculation;
                                                              RUS=????? ??? ???????] }
    { 6503;   ;Lot No. Filter      ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Lot No. Filter;
                                                              RUS=?????? ?? ?????? ????] }
    { 6504;   ;Serial No. Filter   ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Serial No. Filter;
                                                              RUS=?????? ?? ?????? ??????] }
    { 7171;   ;No. of Substitutes  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Item Substitution" WHERE (Type=CONST(Item),
                                                                                                No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Substitutes;
                                                              RUS=???-?? ?????????];
                                                   Editable=No }
    { 7301;   ;Special Equipment Code;Code10      ;TableRelation="Special Equipment";
                                                   CaptionML=[ENU=Special Equipment Code;
                                                              RUS=??? ??????????] }
    { 7302;   ;Put-away Template Code;Code10      ;TableRelation="Put-away Template Header";
                                                   CaptionML=[ENU=Put-away Template Code;
                                                              RUS=??? ????? ??????] }
    { 7307;   ;Put-away Unit of Measure Code;Code10;
                                                   TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Put-away Unit of Measure Code;
                                                              RUS=??? ??????? ??????? ??????] }
    { 7380;   ;Phys Invt Counting Period Code;Code10;
                                                   TableRelation="Phys. Invt. Counting Period";
                                                   OnValidate=VAR
                                                                PhysInvtCountPeriod@1000 : Record 7381;
                                                                PhysInvtCountPeriodMgt@1001 : Codeunit 7380;
                                                              BEGIN
                                                                IF "Phys Invt Counting Period Code" <> '' THEN BEGIN
                                                                  PhysInvtCountPeriod.GET("Phys Invt Counting Period Code");
                                                                  PhysInvtCountPeriod.TESTFIELD("Count Frequency per Year");
                                                                  IF "Phys Invt Counting Period Code" <> xRec."Phys Invt Counting Period Code" THEN BEGIN
                                                                    IF CurrFieldNo <> 0 THEN
                                                                      IF NOT CONFIRM(
                                                                           Text7380,
                                                                           FALSE,
                                                                           FIELDCAPTION("Phys Invt Counting Period Code"),
                                                                           FIELDCAPTION("Next Counting Period"))
                                                                      THEN
                                                                        ERROR(Text7381);

                                                                    "Next Counting Period" :=
                                                                      PhysInvtCountPeriodMgt.CalcPeriod(
                                                                        "Last Counting Period Update",'',PhysInvtCountPeriod."Count Frequency per Year",
                                                                        ("Last Counting Period Update" = 0D) OR
                                                                        ("Phys Invt Counting Period Code" <> xRec."Phys Invt Counting Period Code"));
                                                                  END;
                                                                END ELSE BEGIN
                                                                  IF CurrFieldNo <> 0 THEN
                                                                    IF NOT CONFIRM(Text003,FALSE,FIELDCAPTION("Phys Invt Counting Period Code")) THEN
                                                                      ERROR(Text7381);
                                                                  "Next Counting Period" := '';
                                                                  "Last Counting Period Update" := 0D;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Phys Invt Counting Period Code;
                                                              RUS=??? ???????? ????] }
    { 7381;   ;Last Counting Period Update;Date   ;CaptionML=[ENU=Last Counting Period Update;
                                                              RUS=??? ???. ??????. ?? ?????????];
                                                   Editable=No }
    { 7382;   ;Next Counting Period;Text250       ;CaptionML=[ENU=Next Counting Period;
                                                              RUS=??????? ???? ?????????];
                                                   Editable=No }
    { 7383;   ;Last Phys. Invt. Date;Date         ;FieldClass=FlowField;
                                                   CalcFormula=Max("Phys. Inventory Ledger Entry"."Posting Date" WHERE (Item No.=FIELD(No.),
                                                                                                                        Phys Invt Counting Period Type=FILTER(' '|Item)));
                                                   CaptionML=[ENU=Last Phys. Invt. Date;
                                                              RUS=??? ??????? ?????????];
                                                   Editable=No }
    { 7384;   ;Use Cross-Docking   ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Use Cross-Docking;
                                                              RUS=???????? ??????] }
    { 7700;   ;Identifier Code     ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Identifier".Code WHERE (Item No.=FIELD(No.)));
                                                   CaptionML=[ENU=Identifier Code;
                                                              RUS=??? ?????????];
                                                   Editable=No }
    { 12400;  ;CD Specific Tracking;Boolean       ;OnValidate=BEGIN
                                                                TestNoEntriesExist(FIELDCAPTION("CD Specific Tracking"));
                                                              END;

                                                   CaptionML=[ENU=CD Specific Tracking;
                                                              RUS=??????? ????. ???] }
    { 12401;  ;Gross Weight Mandatory;Boolean     ;CaptionML=[ENU=Gross Weight Mandatory;
                                                              RUS=??? ????? ??????] }
    { 12402;  ;Unit Volume Mandatory;Boolean      ;CaptionML=[ENU=Unit Volume Mandatory;
                                                              RUS=??? ??????? ??????] }
    { 14900;  ;CD No. Filter       ;Code30        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=CD No. Filter;
                                                              RUS=?????? ?? ?????? ??] }
    { 50000;  ;Full Name           ;Text200       ;CaptionML=RUS=?????? ????????????;
                                                   Editable=Yes }
    { 50001;  ;Short Name          ;Text100       ;CaptionML=RUS=???? ????????????;
                                                   Editable=Yes }
    { 50002;  ;Emitent             ;Code20        ;TableRelation=Customer.No.;
                                                   CaptionML=RUS=?????;
                                                   Editable=No }
    { 50003;  ;Security Kind       ;Code30        ;TableRelation="Security Property Kind"."Kind Code" WHERE (Type=FIELD(Item Type));
                                                   CaptionML=RUS=??? ??;
                                                   Editable=Yes }
    { 50004;  ;Security Type       ;Code30        ;OnLookup=VAR
                                                              SPSetup@1101491000 : Record 50020;
                                                            BEGIN
                                                              //+ Pavhm 29.06.2009
                                                              SPSetup.FILTERGROUP(2);
                                                              SPSetup.SETRANGE("Kind Code", "Security Kind");
                                                              SPSetup.SETRANGE(Type, "Item Type");
                                                              SPSetup.FILTERGROUP(0);
                                                              IF PAGE.RUNMODAL(0, SPSetup) = ACTION::LookupOK THEN;
                                                              //=+ pavhm 29.06.2009
                                                            END;

                                                   CaptionML=RUS=??? ??;
                                                   Editable=No }
    { 50005;  ;Security Category   ;Code30        ;TableRelation="Security Category"."Security Category Code";
                                                   CaptionML=RUS=?????? ??;
                                                   Editable=Yes }
    { 50006;  ;Registration Number ;Text125       ;CaptionML=RUS=????? ???. ??????;
                                                   Editable=Yes }
    { 50007;  ;Registration Date   ;Date          ;CaptionML=RUS=??? ???. ??????;
                                                   Editable=Yes }
    { 50008;  ;Registration Organ  ;Text200       ;CaptionML=RUS=???, ??????????? ????;
                                                   Editable=Yes }
    { 50009;  ;ISIN                ;Text50        ;CaptionML=RUS=ISIN }
    { 50010;  ;CFI                 ;Text50        ;CaptionML=RUS=CFI }
    { 50011;  ;Issue               ;Text50        ;CaptionML=RUS=???? ??;
                                                   Editable=No }
    { 50012;  ;Nominal Value       ;Decimal       ;CaptionML=RUS=???????;
                                                   DecimalPlaces=2:8 }
    { 50013;  ;Current Nominal Value;Decimal      ;CaptionML=RUS=????? ???????;
                                                   DecimalPlaces=2:8 }
    { 50014;  ;Currency Code       ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=RUS=????? ????????;
                                                   Editable=No }
    { 50015;  ;Issue Quantity      ;BigInteger    ;CaptionML=RUS=??????? ?? ? ???? }
    { 50016;  ;Issue Quantity Circulate;BigInteger;CaptionML=RUS=??????? ?? ? ?????? }
    { 50017;  ;Issue Form          ;Option        ;CaptionML=RUS=??? ???? ??;
                                                   OptionCaptionML=RUS=" ,????????,???????????";
                                                   OptionString=[ ,Documentary,NOdocumentary] }
    { 50018;  ;Qualified Investors ;Option        ;CaptionML=RUS=?? ??? ???????????;
                                                   OptionCaptionML=RUS=" ,?? ??? ???????????, ?? ??? ??????????? ??? ???????";
                                                   OptionString=[ ,Qualify,All];
                                                   Editable=No }
    { 50021;  ;Affiliated          ;Option        ;CaptionML=RUS=????????????;
                                                   OptionCaptionML=RUS=" ,?? ?????????? ???,?? ???? ???";
                                                   OptionString=[ ,Affiliated,Other] }
    { 50022;  ;Structure Profitability;Option     ;CaptionML=RUS=??????? ???????;
                                                   OptionCaptionML=RUS=" ,??????????? ????????,???? ????????";
                                                   OptionString=[ ,Stated,Market] }
    { 50023;  ;Structure Risk      ;Option        ;CaptionML=RUS=??????? ????;
                                                   OptionCaptionML=RUS=" ,??????? ????????,???????? ?????????? ??,???????? ????????? ??,???????? ????????";
                                                   OptionString=[ ,NORisk,MinRisk,HighRisk,Risk] }
    { 50025;  ;Item Type           ;Option        ;CaptionML=RUS=???;
                                                   OptionCaptionML=[ENU=Security,Property,Mortgage,Service;
                                                                    RUS=??,????????????,?????????,???];
                                                   OptionString=Security,Property,Mortgage,Service }
    { 50026;  ;Address Property    ;Text200       ;CaptionML=RUS=???? ???? ??????????? ?????? }
    { 50027;  ;Appointment Property;Code50        ;TableRelation="Appointment Property"."Appointment Code";
                                                   CaptionML=RUS=???????? ???? ??????????? ?????? }
    { 50028;  ;Square Property     ;Decimal       ;CaptionML=RUS=????? ???? ??????????? ?????? }
    { 50029;  ;Property Kind       ;Code50        ;TableRelation="Security Property Kind"."Kind Code" WHERE (Type=FIELD(Item Type));
                                                   CaptionML=RUS=??? ??????;
                                                   Editable=Yes }
    { 50030;  ;Right Property      ;Text200       ;CaptionML=RUS=??? ??? ?? ????? ??????????? ?????? }
    { 50031;  ;Day Paying Off      ;Date          ;CaptionML=RUS=??? ??????? }
    { 50032;  ;Base Active         ;Code20        ;TableRelation="General Item".No. WHERE (Item Type=CONST(Security),
                                                                                           No.=FIELD(General Item No.));
                                                   OnLookup=VAR
                                                              GeneralItem@1101491000 : Record 50033;
                                                            BEGIN
                                                              GeneralItem.FILTERGROUP(2);
                                                              GeneralItem.SETRANGE("Item Type", GeneralItem."Item Type"::Security);
                                                              GeneralItem.SETRANGE("No.", "General Item No.");
                                                              GeneralItem.FILTERGROUP(0);
                                                              PAGE.RUNMODAL(PAGE::"General Item List", GeneralItem);
                                                            END;

                                                   CaptionML=[ENU=Base Active;
                                                              RUS=?????? ???] }
    { 50033;  ;Item Property Activity;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Item Property Activity" WHERE (Item No.=FIELD(No.)));
                                                   CaptionML=RUS=???? ??????? }
    { 50034;  ;General Item No.    ;Code20        ;TableRelation="General Item".No. WHERE (Item Type=FIELD(Item Type));
                                                   CaptionML=[ENU=General Item;
                                                              RUS=???? ?????];
                                                   Editable=No }
    { 50035;  ;Costing Method Post ;Option        ;OnValidate=BEGIN
                                                                CASE "Costing Method Post" OF
                                                                  "Costing Method Post"::FIFO:
                                                                    VALIDATE("Costing Method", "Costing Method"::FIFO);
                                                                  "Costing Method Post"::LIFO:
                                                                    VALIDATE("Costing Method", "Costing Method"::LIFO);
                                                                  "Costing Method Post"::Average:
                                                                    VALIDATE("Costing Method", "Costing Method"::Average);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Costing Method;
                                                              RUS=??? ??? ??????????];
                                                   OptionCaptionML=[ENU=FIFO,LIFO,Average;
                                                                    RUS=FIFO,LIFO,?? ?????];
                                                   OptionString=FIFO,LIFO,Average }
    { 50036;  ;Territory Property  ;Option        ;CaptionML=[ENU=Territory Property;
                                                              RUS=????????? ????????????];
                                                   OptionCaptionML=[ENU=Russian,Other;
                                                                    RUS=?????? ???????,????????? ???????];
                                                   OptionString=Russian,Other }
    { 50037;  ;Property Type       ;Code30        ;TableRelation="Security Property Type"."Type Code" WHERE (Type=FILTER(Property));
                                                   OnLookup=VAR
                                                              SPSetup@1101491000 : Record 50019;
                                                            BEGIN
                                                              SPSetup.RESET;
                                                              //SPSetup.SETRANGE("Type Code", "Property Kind");
                                                              SPSetup.SETRANGE(Type, "Item Type");
                                                              IF SPSetup.FINDSET THEN;
                                                              IF SPSetup.GET("Property Type","Item Type") THEN;
                                                              IF PAGE.RUNMODAL(0, SPSetup) = ACTION::LookupOK THEN
                                                                "Property Type" := SPSetup."Type Code";
                                                            END;

                                                   CaptionML=[ENU=Property Type;
                                                              RUS=??? ??????];
                                                   Editable=Yes }
    { 50038;  ;Property Membership ;Option        ;CaptionML=[ENU=Property Membership;
                                                              RUS=???????????? ??????];
                                                   OptionCaptionML=[ENU=Russian,Foreign;
                                                                    RUS=?? ????? ??,?? ????? ??????. ???????];
                                                   OptionString=Russian,Foreign }
    { 50039;  ;Linked NKD Item No. ;Code20        ;TableRelation=Item.No. WHERE (Item Type=CONST(Security));
                                                   CaptionML=[ENU=Linked NKD Item No.;
                                                              RUS=??????? ????? ??? ??.] }
    { 50040;  ;Item Entry No. Filter;Integer      ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Item Entry No. Filter;
                                                              RUS=????? ?????? ??. ??????] }
    { 50041;  ;Balance Cost        ;Decimal       ;CaptionML=[ENU=Balance Cost;
                                                              RUS=???????? ???????];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50042;  ;Assessed Cost       ;Decimal       ;OnValidate=BEGIN
                                                                SaveHistory(FIELDNO("Assessed Cost"));
                                                              END;

                                                   CaptionML=[ENU=Assessed Cost;
                                                              RUS=????? ???????];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50043;  ;NKD Card            ;Boolean       ;CaptionML=[ENU=NKD Card;
                                                              RUS=????? ???] }
    { 50044;  ;Excluded From Quotation List;Boolean;
                                                   CaptionML=[ENU=Excluded From Quotation List;
                                                              RUS=????? ?? ????????? ????] }
    { 50045;  ;Quotation List      ;Code10        ;CaptionML=RUS=???????? ???? }
    { 50050;  ;Income Stock Appointment Code;Code30;
                                                   TableRelation="Finance Posting Setup";
                                                   CaptionML=[ENU=Income Stock Appointment Code;
                                                              RUS=????? ?????? ???] }
    { 50051;  ;Expense Stock Appointment Code;Code30;
                                                   TableRelation="Finance Posting Setup";
                                                   CaptionML=[ENU=Expense Stock Appointment Code;
                                                              RUS=????? ?????? ????] }
    { 50052;  ;Income Ex-pit Appointment Code;Code30;
                                                   TableRelation="Finance Posting Setup";
                                                   CaptionML=[ENU=Income Ex-pit Appointment Code;
                                                              RUS=???????? ?????? ???] }
    { 50053;  ;Expense Ex-pit Appoint. Code;Code30;TableRelation="Finance Posting Setup";
                                                   CaptionML=[ENU=Expense Ex-pit Appoint. Code;
                                                              RUS=???????? ?????? ????] }
    { 50054;  ;Kadastr No.         ;Text30        ;CaptionML=RUS=???????? ????? }
    { 50055;  ;Include Date Fund   ;Date          ;CaptionML=RUS=??? ??????? ? ???? ????? }
    { 50056;  ;Mortgage No.        ;Code10        ;TableRelation=Mortgage.No.;
                                                   CaptionML=[ENU=Mortgage No.;
                                                              RUS=????????? ??.] }
    { 50057;  ;Appointment         ;Option        ;CaptionML=[ENU=Appointment;
                                                              RUS=????????];
                                                   OptionCaptionML=[ENU=Dwelling,Not Dwelling;
                                                                    RUS=?????,???????];
                                                   OptionString=Dwelling,Not Dwelling }
    { 50058;  ;Mortgage Reg. Number;Code50        ;CaptionML=[ENU=Registration Number;
                                                              RUS=????? ???. ?????? ?????] }
    { 50059;  ;Mortgage Reg. Date  ;Date          ;CaptionML=RUS=??? ???. ?????? ????? }
    { 50060;  ;Dolevoe             ;Boolean       ;CaptionML=RUS=??????? ???? }
    { 50061;  ;Zhil Size           ;Decimal       ;CaptionML=RUS=????? ????? }
    { 50062;  ;Assessed Cost Date  ;Date          ;OnValidate=BEGIN
                                                                SaveHistory(FIELDNO("Assessed Cost Date"));
                                                              END;

                                                   CaptionML=RUS=??? ???? ?????? }
    { 50063;  ;Place               ;Text150       ;CaptionML=RUS=??????????? }
    { 50064;  ;Information         ;Text150       ;CaptionML=RUS=?????? / ???????? }
    { 50065;  ;Status Estate       ;Option        ;CaptionML=RUS=????? ??????;
                                                   OptionCaptionML=RUS=? ????,?????? ? ??,????? ?? ??;
                                                   OptionString=Verify,Fund,Exclude }
    { 50066;  ;Quantity            ;Integer       ;CaptionML=RUS=??????? ? ?? }
    { 50067;  ;Region Name         ;Text60        ;TableRelation="Reporting Directory".Code WHERE (Directory Type=CONST(Region Code));
                                                   CaptionML=RUS=???? ?? }
    { 50068;  ;Lic. No.            ;Code20        ;CaptionML=RUS=????? ?????? }
    { 50069;  ;Lic. Date           ;Date          ;CaptionML=RUS=??? ?????? }
    { 50070;  ;Trade Org           ;Text100       ;CaptionML=RUS=???????? ????? ?? ??? ?? }
    { 50071;  ;Balance Cost2       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)");
                                                   CaptionML=[ENU=Balance Cost;
                                                              RUS=???????? ???????];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50072;  ;Assessed Cost2      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Cost Amount (Actual)" WHERE (Item No.=FIELD(No.),
                                                                                                               Valuation Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                               Item Charge No.=FILTER(''),
                                                                                                               Item Ledger Entry No.=FIELD(UPPERLIMIT(Item Entry No. Filter))));
                                                   CaptionML=[ENU=Assessed Cost;
                                                              RUS=????? ???????];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50073;  ;Security Type 2     ;Option        ;CaptionML=RUS=??? ?????? ????;
                                                   OptionCaptionML=RUS=" ,???.?? ??,???.?? ???? ??";
                                                   OptionString=[ ,Gos,Gossub] }
    { 50074;  ;SpecDepDepositor    ;Boolean       ;CaptionML=RUS=??? ?? ? ?????? }
    { 50075;  ;Card No. 1          ;Code20        ;CaptionML=RUS=???? ?? ??????? ?????? }
    { 50076;  ;Card No. 2          ;Code20        ;CaptionML=RUS=???? ?? ?????? ?????? }
    { 50077;  ;ISU No.             ;Code20        ;CaptionML=RUS=???? ?? ??? }
    { 99000750;;Routing No.        ;Code20        ;TableRelation="Routing Header";
                                                   OnValidate=BEGIN
                                                                IF "Routing No." <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);

                                                                PlanningAssignment.RoutingReplace(Rec,xRec."Routing No.");

                                                                IF "Routing No." <> xRec."Routing No." THEN
                                                                  ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Routing No."));
                                                              END;

                                                   CaptionML=[ENU=Routing No.;
                                                              RUS=????? ???????] }
    { 99000751;;Production BOM No. ;Code20        ;TableRelation="Production BOM Header";
                                                   OnValidate=VAR
                                                                MfgSetup@1000 : Record 99000765;
                                                                ProdBOMHeader@1001 : Record 99000771;
                                                                ItemUnitOfMeasure@1003 : Record 5404;
                                                                CalcLowLevel@1002 : Codeunit 99000793;
                                                              BEGIN
                                                                IF "Production BOM No." <> '' THEN
                                                                  TESTFIELD(Type,Type::Inventory);

                                                                PlanningAssignment.BomReplace(Rec,xRec."Production BOM No.");

                                                                IF "Production BOM No." <> xRec."Production BOM No." THEN
                                                                  ItemCostMgt.UpdateUnitCost(Rec,'','',0,0,FALSE,FALSE,TRUE,FIELDNO("Production BOM No."));

                                                                IF ("Production BOM No." <> '') AND ("Production BOM No." <> xRec."Production BOM No.") THEN BEGIN
                                                                  ProdBOMHeader.GET("Production BOM No.");
                                                                  ItemUnitOfMeasure.GET("No.",ProdBOMHeader."Unit of Measure Code");
                                                                  IF ProdBOMHeader.Status = ProdBOMHeader.Status::Certified THEN BEGIN
                                                                    MfgSetup.GET;
                                                                    IF MfgSetup."Dynamic Low-Level Code" THEN
                                                                      CalcLowLevel.RUN(Rec);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Production BOM No.;
                                                              RUS=????? ????. ?????] }
    { 99000752;;Single-Level Material Cost;Decimal;CaptionML=[ENU=Single-Level Material Cost;
                                                              RUS=??????????? ??????? ???????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000753;;Single-Level Capacity Cost;Decimal;CaptionML=[ENU=Single-Level Capacity Cost;
                                                              RUS=??????. ??????? ????. ?????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000754;;Single-Level Subcontrd. Cost;Decimal;
                                                   CaptionML=[ENU=Single-Level Subcontrd. Cost;
                                                              RUS=??????????? ???????? ?????????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000755;;Single-Level Cap. Ovhd Cost;Decimal;
                                                   CaptionML=[ENU=Single-Level Cap. Ovhd Cost;
                                                              RUS=??????????? ????????? ????????? ????? ???????????? ?????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000756;;Single-Level Mfg. Ovhd Cost;Decimal;
                                                   CaptionML=[ENU=Single-Level Mfg. Ovhd Cost;
                                                              RUS=??????. ???. ???????? ????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000757;;Overhead Rate      ;Decimal       ;CaptionML=[ENU=Overhead Rate;
                                                              RUS=??? ????????? ?????];
                                                   AutoFormatType=2 }
    { 99000758;;Rolled-up Subcontracted Cost;Decimal;
                                                   CaptionML=[ENU=Rolled-up Subcontracted Cost;
                                                              RUS=????????? ????. ??????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000759;;Rolled-up Mfg. Ovhd Cost;Decimal  ;CaptionML=[ENU=Rolled-up Mfg. Ovhd Cost;
                                                              RUS=????????? ??????? ????????? ????? ????????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000760;;Rolled-up Cap. Overhead Cost;Decimal;
                                                   CaptionML=[ENU=Rolled-up Cap. Overhead Cost;
                                                              RUS=????????? ??????? ????????? ????? ???????????? ?????];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 99000761;;Planning Issues (Qty.);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Planning Component"."Expected Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                          Due Date=FIELD(Date Filter),
                                                                                                                          Location Code=FIELD(Location Filter),
                                                                                                                          Variant Code=FIELD(Variant Filter),
                                                                                                                          Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                          Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                          Planning Line Origin=CONST(" ")));
                                                   CaptionML=[ENU=Planning Issues (Qty.);
                                                              RUS=??????? ??? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000762;;Planning Receipt (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Due Date=FIELD(Date Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=[ENU=Planning Receipt (Qty.);
                                                              RUS=??????? ????????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000765;;Planned Order Receipt (Qty.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Planned),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Planned Order Receipt (Qty.);
                                                              RUS=???????? ????????? ?? ??????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000766;;FP Order Receipt (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Firm Planned),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=FP Order Receipt (Qty.);
                                                              RUS=????????? ?? ??. ??????? (???. ???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000767;;Rel. Order Receipt (Qty.);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Released),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Rel. Order Receipt (Qty.);
                                                              RUS=?????. ?? ?????. ?????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000768;;Planning Release (Qty.);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Starting Date=FIELD(Date Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=[ENU=Planning Release (Qty.);
                                                              RUS=??????? ???? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000769;;Planned Order Release (Qty.);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=CONST(Planned),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Starting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Planned Order Release (Qty.);
                                                              RUS=????????. ? ????. ??????? (???. ???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000770;;Purch. Req. Receipt (Qty.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Due Date=FIELD(Date Filter),
                                                                                                               Planning Line Origin=CONST(" ")));
                                                   CaptionML=[ENU=Purch. Req. Receipt (Qty.);
                                                              RUS=????????? ?? ????? ?? ?????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000771;;Purch. Req. Release (Qty.);Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Requisition Line"."Quantity (Base)" WHERE (Type=CONST(Item),
                                                                                                               No.=FIELD(No.),
                                                                                                               Location Code=FIELD(Location Filter),
                                                                                                               Variant Code=FIELD(Variant Filter),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Order Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Purch. Req. Release (Qty.);
                                                              RUS=???? ?? ????? ?? ????? (???-??)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000773;;Order Tracking Policy;Option      ;OnValidate=VAR
                                                                ReservEntry@1000 : Record 337;
                                                                ActionMessageEntry@1001 : Record 99000849;
                                                                TempReservationEntry@1002 : TEMPORARY Record 337;
                                                              BEGIN
                                                                IF "Order Tracking Policy" <> "Order Tracking Policy"::None THEN
                                                                  TESTFIELD(Type,Type::Inventory);
                                                                IF xRec."Order Tracking Policy" = "Order Tracking Policy" THEN
                                                                  EXIT;
                                                                IF "Order Tracking Policy" > xRec."Order Tracking Policy" THEN BEGIN
                                                                  MESSAGE(Text99000000 +
                                                                    Text99000001,
                                                                    SELECTSTR("Order Tracking Policy",Text99000002));
                                                                END ELSE BEGIN
                                                                  ActionMessageEntry.SETCURRENTKEY("Reservation Entry");
                                                                  ReservEntry.SETCURRENTKEY("Item No.","Variant Code","Location Code","Reservation Status");
                                                                  ReservEntry.SETRANGE("Item No.","No.");
                                                                  ReservEntry.SETRANGE("Reservation Status",ReservEntry."Reservation Status"::Tracking,ReservEntry."Reservation Status"::Surplus);
                                                                  IF ReservEntry.FIND('-') THEN
                                                                    REPEAT
                                                                      ActionMessageEntry.SETRANGE("Reservation Entry",ReservEntry."Entry No.");
                                                                      ActionMessageEntry.DELETEALL;
                                                                      IF "Order Tracking Policy" = "Order Tracking Policy"::None THEN
                                                                        IF (ReservEntry."Lot No." <> '') OR (ReservEntry."Serial No." <> '') THEN BEGIN
                                                                          TempReservationEntry := ReservEntry;
                                                                          TempReservationEntry."Reservation Status" := TempReservationEntry."Reservation Status"::Surplus;
                                                                          TempReservationEntry.INSERT;
                                                                        END ELSE
                                                                          ReservEntry.DELETE;
                                                                    UNTIL ReservEntry.NEXT = 0;

                                                                  IF TempReservationEntry.FIND('-') THEN
                                                                    REPEAT
                                                                      ReservEntry := TempReservationEntry;
                                                                      ReservEntry.MODIFY;
                                                                    UNTIL TempReservationEntry.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Order Tracking Policy;
                                                              RUS=?????? ????. ???????];
                                                   OptionCaptionML=[ENU=None,Tracking Only,Tracking & Action Msg.;
                                                                    RUS=???,???? ???????,??????? ? ??????];
                                                   OptionString=None,Tracking Only,Tracking & Action Msg. }
    { 99000774;;Prod. Forecast Quantity (Base);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Production Forecast Entry"."Forecast Quantity (Base)" WHERE (Item No.=FIELD(No.),
                                                                                                                                 Production Forecast Name=FIELD(Production Forecast Name),
                                                                                                                                 Forecast Date=FIELD(Date Filter),
                                                                                                                                 Location Code=FIELD(Location Filter),
                                                                                                                                 Component Forecast=FIELD(Component Forecast)));
                                                   CaptionML=[ENU=Prod. Forecast Quantity (Base);
                                                              RUS=???-?? ?????? ???????? (???.)];
                                                   DecimalPlaces=0:5 }
    { 99000775;;Production Forecast Name;Code10   ;FieldClass=FlowFilter;
                                                   TableRelation="Production Forecast Name";
                                                   CaptionML=[ENU=Production Forecast Name;
                                                              RUS=???????? ?????? ????????] }
    { 99000776;;Component Forecast ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Component Forecast;
                                                              RUS=????? ??? ?????????] }
    { 99000777;;Qty. on Prod. Order;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Line"."Remaining Qty. (Base)" WHERE (Status=FILTER(Planned..Released),
                                                                                                                     Item No.=FIELD(No.),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Location Code=FIELD(Location Filter),
                                                                                                                     Variant Code=FIELD(Variant Filter),
                                                                                                                     Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Prod. Order;
                                                              RUS=???-?? ? ???????????? ???????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000778;;Qty. on Component Lines;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Prod. Order Component"."Remaining Qty. (Base)" WHERE (Status=FILTER(Planned..Released),
                                                                                                                          Item No.=FIELD(No.),
                                                                                                                          Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                          Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                          Location Code=FIELD(Location Filter),
                                                                                                                          Variant Code=FIELD(Variant Filter),
                                                                                                                          Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Component Lines;
                                                              RUS=???-?? ? ????? ?????????];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 99000875;;Critical           ;Boolean       ;CaptionML=[ENU=Critical;
                                                              RUS=??????] }
    { 99008500;;Common Item No.    ;Code20        ;CaptionML=[ENU=Common Item No.;
                                                              RUS=??? ???? ???] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Description                       }
    {    ;Inventory Posting Group                  }
    {    ;Shelf No.                                }
    {    ;Vendor No.                               }
    {    ;Gen. Prod. Posting Group                 }
    {    ;Low-Level Code                           }
    {    ;Production BOM No.                      ;KeyGroups=Item(MFG) }
    {    ;Routing No.                             ;KeyGroups=Item(MFG) }
    {    ;Vendor Item No.,Vendor No.               }
    {    ;Common Item No.                          }
    {    ;Service Item Group                       }
    {    ;Cost is Adjusted,Allow Online Adjustment }
    {    ;Description                             ;KeyGroups=SearchCol }
    {    ;Base Unit of Measure                    ;KeyGroups=SearchCol }
    {    ;Type                                     }
    {    ;Item Category Code,Product Group Code    }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Base Unit of Measure,Unit Price }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Purchase %3 that includes this item.;RUS=????? ????? %1 %2, ?????? ??????? ???????. %3 ?????, ?? ???? ??? ???.';
      Text001@1001 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Sales %3 that includes this item.;RUS=????? ????? %1 %2, ?????? ???? ?????????? ????? ????? %3, ?? ???? ??? ???.';
      Text002@1002 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more outstanding production orders that include this item.;RUS=????? ????? %1 %2, ?????? ???? ?????????? ??????????? ??????, ?? ???? ??? ???.';
      Text003@1057 : TextConst 'ENU=Do you want to change %1?;RUS=???????? %1?';
      Text004@1064 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more certified Production BOM that include this item.;RUS=????? ????? %1 %2, ?????? ???? ??? ????? ??????????? ???????????? ????? ??????? ??? ???.';
      Text006@1003 : TextConst 'ENU=Prices including VAT cannot be calculated when %1 is %2.;RUS=?????????? ??????? ?? ? ???, ?? %1 ??? %2.';
      Text007@1004 : TextConst 'ENU=You cannot change %1 because there are one or more ledger entries for this item.;RUS=????????? %1 ??????????, ?????? ???????? ????? ??? ??? ???.';
      Text008@1005 : TextConst 'ENU=You cannot change %1 because there is at least one outstanding Purchase %2 that include this item.;RUS=????? ???????? %1, ?????? ??????? ???????. %2 ?????, ?? ???? ??? ???.';
      Text014@1006 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more production order component lines that include this item with a remaining quantity that is not 0.;RUS=????? ????? %1 %2, ?????? ???? ??? ????? ??? ????????? ???????????? ???????, ????? ??????? ??? ???, ????? ??????? ????.';
      Text016@1008 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more outstanding transfer orders that include this item.;RUS=????? ????? %1 %2, ?????? ???? ?????????? ?????? ?? ???????, ?? ???? ??? ???.';
      Text017@1009 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Service %3 that includes this item.;RUS=????? ????? %1 %2, ?????? ??????? ????????. ???. %3, ?? ???? ??? ???.';
      Text018@1010 : TextConst 'ENU=%1 must be %2 in %3 %4 when %5 is %6.;RUS=%1 ?????? ???? %2 ? %3 %4, ?? %5 ?????? %6.';
      Text019@1011 : TextConst 'ENU=You cannot change %1 because there are one or more open ledger entries for this item.;RUS=????? ???????? %1, ?????? ???? ?????? ????? ?? ??? ??? ???.';
      Text020@1012 : TextConst 'ENU="There may be orders and open ledger entries for the item. ";RUS="???????? ????? ??????? ? ??????? ????? ?? ??? ??????? ???. "';
      Text021@1013 : TextConst 'ENU=If you change %1 it may affect new orders and entries.\\;RUS=????????? %1 ????? ???????? ?? ???? ?????? ? ?????.\\';
      Text022@1014 : TextConst 'ENU=Do you want to change %1?;RUS=???????? %1?';
      GLSetup@1053 : Record 98;
      InvtSetup@1015 : Record 313;
      Text023@1066 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one %3 that includes this item.;RUS=????? ????? %1 %2, ?????? ??????? %3, ?? ???? ??? ???.';
      Text024@1072 : TextConst 'ENU=If you change %1 it may affect existing production orders.\;RUS=????????? %1 ????? ???????? ?? ???????? ??????????? ??????.\';
      Text025@1055 : TextConst 'ENU=%1 must be an integer because %2 %3 is set up to use %4.;RUS=?????? %1 ?????? ???? ??, ?????? %2 %3 ?????? ??? ????????? %4.';
      Text026@1077 : TextConst 'ENU=%1 cannot be changed because the %2 has work in process (WIP). Changing the value may offset the WIP account.;RUS=?????????? ???????? %1, ? ??? %2 ???? ??????????? ???????? (???). ????????? ?????? ????? ????? ? ???????? ??? ???.';
      Text7380@1058 : TextConst 'ENU=If you change the %1, the %2 is calculated.\Do you still want to change the %1?;RUS=?? ????????? %1 ??? ?????? ???? %2.\???????? %1?';
      Text7381@1056 : TextConst 'ENU=Cancelled.;RUS=??????.';
      Text99000000@1017 : TextConst 'ENU=The change will not affect existing entries.\;RUS=????????? ?? ??????? ?? ???????? ?????.\';
      CommentLine@1018 : Record 97;
      Text99000001@1019 : TextConst 'ENU=If you want to generate %1 for existing entries, you must run a regenerative planning.;RUS=?? ?????? ???????? %1 ??? ????????? ?????, ???????? ???????? ????????? ??????????.';
      ItemVend@1020 : Record 99;
      Text99000002@1021 : TextConst 'ENU=tracking,tracking and action messages;RUS=???????,??????? ? ??????';
      SalesPrice@1022 : Record 7002;
      SalesLineDisc@1059 : Record 7004;
      SalesPrepmtPct@1051 : Record 459;
      PurchPrice@1060 : Record 7012;
      PurchLineDisc@1061 : Record 7014;
      PurchPrepmtPct@1076 : Record 460;
      ItemTranslation@1023 : Record 30;
      BOMComp@1024 : Record 90;
      PurchOrderLine@1025 : Record 39;
      SalesOrderLine@1026 : Record 37;
      VATPostingSetup@1027 : Record 325;
      ExtTextHeader@1028 : Record 279;
      GenProdPostingGrp@1029 : Record 251;
      ItemUnitOfMeasure@1030 : Record 5404;
      ItemVariant@1031 : Record 5401;
      ItemJnlLine@1007 : Record 83;
      ProdOrderLine@1032 : Record 5406;
      ProdOrderComp@1033 : Record 5407;
      PlanningAssignment@1035 : Record 99000850;
      SKU@1036 : Record 5700;
      ItemTrackingCode@1037 : Record 6502;
      ItemTrackingCode2@1038 : Record 6502;
      ServInvLine@1039 : Record 5902;
      ItemSub@1040 : Record 5715;
      ItemCategory@1041 : Record 5722;
      TransLine@1042 : Record 5741;
      Vend@1016 : Record 23;
      NonstockItem@1034 : Record 5718;
      ProdBOMHeader@1062 : Record 99000771;
      ProdBOMLine@1063 : Record 99000772;
      ItemIdent@1065 : Record 7704;
      RequisitionLine@1067 : Record 246;
      ItemBudgetEntry@1075 : Record 7134;
      ItemAnalysisViewEntry@1074 : Record 7154;
      ItemAnalysisBudgViewEntry@1073 : Record 7156;
      TroubleshSetup@1050 : Record 5945;
      ServiceItem@1068 : Record 5940;
      ServiceContractLine@1069 : Record 5964;
      ServiceItemComponent@1070 : Record 5941;
      ProductGrp@1048 : Record 5723;
      NoSeriesMgt@1043 : Codeunit 396;
      MoveEntries@1044 : Codeunit 361;
      DimMgt@1045 : Codeunit 408;
      NonstockItemMgt@1046 : Codeunit 5703;
      ItemCostMgt@1047 : Codeunit 5804;
      ResSkillMgt@1071 : Codeunit 5931;
      CalendarMgt@1054 : Codeunit 7600;
      HasInvtSetup@1049 : Boolean;
      GLSetupRead@1052 : Boolean;
      Text027@1078 : TextConst '@@@=starts with "Rounding Precision";ENU=must be greater than 0.;RUS=?????? ???? ????? 0.';
      Text028@1080 : TextConst 'ENU=You cannot perform this action because entries for item %1 are unapplied in %2 by user %3.;RUS=?? ?????? ??????? ??????????, ? ??? ????? ??? ??? %1 ?? ??????? ? %2 ????????? %3.';
      CannotChangeFieldErr@1079 : TextConst '@@@="%1 = field name, %2 = item table name, %3 = item No., %4 = table name";ENU=You cannot change the %1 field on %2 %3 because there exists at least one %4 then includes this item.;RUS=???????? ???? %1 ? %2 %3 ??????????, ? ??? ?? ????? ? ???? %4 ?????? ??? ????????????.';
      BaseUnitOfMeasureQtyMustBeOneErr@1081 : TextConst '@@@="%1 Name of Unit of measure (e.g. BOX, PCS, KG...), %2 Qty. of %1 per base unit of measure ";ENU=The quantity per base unit of measure must be 1. %1 is set up with %2 per unit of measure.\\You can change this setup in the Item Units of Measure window.;RUS=??????? ? ??????? ?????? ??????? ?????? ???? ??? 1. ??? %1 ??????? ??????? %2 ? ?????? ???????.\\??? ??????? ????? ???????? ? ???? <?????? ??????? ????????????>.';
      Text50000@1000000003 : TextConst 'RUS=? ???? ? ????????? ???????? ????? - %1. ?? ??? ????? ??????';
      Text50001@1000000002 : TextConst 'ENU=NKD %1;RUS=??? %1';
      Text50002@1000000001 : TextConst 'RUS=??????? ????? ??? ?? ?????? ??????? - %1';
      Text50003@1000000000 : TextConst 'RUS=????? ???????? ?????????? ??????.';
      PifSetup@1000000009 : Record 50001;
      SpecSetup@1000000008 : Record 50000;
      SpecSetupAdd@1000000007 : Record 50085;
      NotTestEntriesExist@1000000006 : Boolean;
      Mortgage@1000000005 : Record 50090;
      DateHistory@1000000004 : Date;

    PROCEDURE AssistEdit@2() : Boolean;
    BEGIN
      GetInvtSetup;
      InvtSetup.TESTFIELD("Item Nos.");
      IF NoSeriesMgt.SelectSeries(InvtSetup."Item Nos.",xRec."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE FindItemVend@5(VAR ItemVend@1000 : Record 99;LocationCode@1002 : Code[10]);
    VAR
      GetPlanningParameters@1004 : Codeunit 99000855;
    BEGIN
      TESTFIELD("No.");
      ItemVend.RESET;
      ItemVend.SETRANGE("Item No.","No.");
      ItemVend.SETRANGE("Vendor No.",ItemVend."Vendor No.");
      ItemVend.SETRANGE("Variant Code",ItemVend."Variant Code");

      IF NOT ItemVend.FIND('+') THEN BEGIN
        ItemVend."Item No." := "No.";
        ItemVend."Vendor Item No." := '';
        GetPlanningParameters.AtSKU(SKU,"No.",ItemVend."Variant Code",LocationCode);
        IF ItemVend."Vendor No." = '' THEN
          ItemVend."Vendor No." := SKU."Vendor No.";
        IF (ItemVend."Vendor Item No." = '') AND (ItemVend."Vendor No." = SKU."Vendor No.") THEN
          ItemVend."Vendor Item No." := SKU."Vendor Item No.";
        ItemVend."Lead Time Calculation" := SKU."Lead Time Calculation";
      END;
      IF FORMAT(ItemVend."Lead Time Calculation") = '' THEN
        IF Vend.GET(ItemVend."Vendor No.") THEN
          ItemVend."Lead Time Calculation" := Vend."Lead Time Calculation";
      ItemVend.RESET;
    END;

    PROCEDURE ValidateShortcutDimCode@8(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Item,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE TestNoEntriesExist@1006(CurrentFieldName@1000 : Text[100]);
    VAR
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      ItemLedgEntry.SETCURRENTKEY("Item No.");
      ItemLedgEntry.SETRANGE("Item No.","No.");
      IF NOT ItemLedgEntry.ISEMPTY THEN
        ERROR(
          Text007,
          CurrentFieldName);

      PurchOrderLine.SETCURRENTKEY("Document Type",Type,"No.");
      PurchOrderLine.SETFILTER(
        "Document Type",'%1|%2',
        PurchOrderLine."Document Type"::Order,
        PurchOrderLine."Document Type"::"Return Order");
      PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::Item);
      PurchOrderLine.SETRANGE("No.","No.");
      IF PurchOrderLine.FINDFIRST THEN
        ERROR(
          Text008,
          CurrentFieldName,
          PurchOrderLine."Document Type");
    END;

    PROCEDURE TestNoOpenEntriesExist@4(CurrentFieldName@1000 : Text[100]);
    VAR
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
      ItemLedgEntry.SETRANGE("Item No.","No.");
      ItemLedgEntry.SETRANGE(Open,TRUE);
      IF NOT ItemLedgEntry.ISEMPTY THEN
        ERROR(
          Text019,
          CurrentFieldName);
    END;

    PROCEDURE ItemSKUGet@11(VAR Item@1000 : Record 27;LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    VAR
      SKU@1003 : Record 5700;
    BEGIN
      IF Item.GET("No.") THEN BEGIN
        IF SKU.GET(LocationCode,Item."No.",VariantCode) THEN
          Item."Shelf No." := SKU."Shelf No.";
      END;
    END;

    PROCEDURE GetInvtSetup@14();
    BEGIN
      IF NOT HasInvtSetup THEN BEGIN
        InvtSetup.GET;
        HasInvtSetup := TRUE;
      END;
    END;

    PROCEDURE IsMfgItem@1() : Boolean;
    BEGIN
      EXIT("Replenishment System" = "Replenishment System"::"Prod. Order");
    END;

    PROCEDURE IsAssemblyItem@24() : Boolean;
    BEGIN
      EXIT("Replenishment System" = "Replenishment System"::Assembly);
    END;

    PROCEDURE HasBOM@18() : Boolean;
    BEGIN
      CALCFIELDS("Assembly BOM");
      EXIT("Assembly BOM" OR ("Production BOM No." <> ''));
    END;

    LOCAL PROCEDURE GetGLSetup@6();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    PROCEDURE ProdOrderExist@7() : Boolean;
    BEGIN
      ProdOrderLine.SETCURRENTKEY(Status,"Item No.");
      ProdOrderLine.SETFILTER(Status,'..%1',ProdOrderLine.Status::Released);
      ProdOrderLine.SETRANGE("Item No.","No.");
      IF NOT ProdOrderLine.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE PlanningTransferShptQty@9() Sum : Decimal;
    VAR
      ReqLine@1000 : Record 246;
    BEGIN
      ReqLine.SETCURRENTKEY(Type,"No.","Variant Code","Transfer-from Code","Transfer Shipment Date");
      ReqLine.SETRANGE("Replenishment System",ReqLine."Replenishment System"::Transfer);
      ReqLine.SETRANGE(Type,ReqLine.Type::Item);
      ReqLine.SETRANGE("No.","No.");
      COPYFILTER("Variant Filter",ReqLine."Variant Code");
      COPYFILTER("Location Filter",ReqLine."Transfer-from Code");
      COPYFILTER("Date Filter",ReqLine."Transfer Shipment Date");
      IF ReqLine.ISEMPTY THEN
        EXIT;

      IF ReqLine.FINDSET THEN
        REPEAT
          Sum += ReqLine."Quantity (Base)";
        UNTIL ReqLine.NEXT = 0;
    END;

    PROCEDURE PlanningReleaseQty@3() Sum : Decimal;
    VAR
      ReqLine@1000 : Record 246;
    BEGIN
      ReqLine.SETCURRENTKEY(Type,"No.","Variant Code","Location Code");
      ReqLine.SETRANGE(Type,ReqLine.Type::Item);
      ReqLine.SETRANGE("No.","No.");
      COPYFILTER("Variant Filter",ReqLine."Variant Code");
      COPYFILTER("Location Filter",ReqLine."Location Code");
      COPYFILTER("Date Filter",ReqLine."Starting Date");
      COPYFILTER("Global Dimension 1 Filter",ReqLine."Shortcut Dimension 1 Code");
      COPYFILTER("Global Dimension 2 Filter",ReqLine."Shortcut Dimension 2 Code");
      IF ReqLine.ISEMPTY THEN
        EXIT;

      IF ReqLine.FINDSET THEN
        REPEAT
          Sum += ReqLine."Quantity (Base)";
        UNTIL ReqLine.NEXT = 0;
    END;

    PROCEDURE CalcSalesReturn@10() : Decimal;
    VAR
      SalesLine@1000 : Record 37;
    BEGIN
      SalesLine.SETCURRENTKEY("Document Type",Type,"No.","Variant Code","Drop Shipment","Location Code","Shipment Date");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::"Return Order");
      SalesLine.SETRANGE(Type,SalesLine.Type::Item);
      SalesLine.SETRANGE("No.","No.");
      SalesLine.SETFILTER("Location Code",GETFILTER("Location Filter"));
      SalesLine.SETFILTER("Drop Shipment",GETFILTER("Drop Shipment Filter"));
      SalesLine.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
      SalesLine.SETFILTER("Shipment Date",GETFILTER("Date Filter"));
      SalesLine.CALCSUMS("Outstanding Qty. (Base)");
      EXIT(SalesLine."Outstanding Qty. (Base)");
    END;

    PROCEDURE CalcPlanningWorksheetQty@29() : Decimal;
    VAR
      RequisitionLine@1000 : Record 246;
    BEGIN
      RequisitionLine.SETRANGE(Type,RequisitionLine.Type::Item);
      RequisitionLine.SETRANGE("No.","No.");
      RequisitionLine.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
      RequisitionLine.SETFILTER("Location Code",GETFILTER("Location Filter"));
      RequisitionLine.SETFILTER("Shortcut Dimension 1 Code",GETFILTER("Global Dimension 1 Filter"));
      RequisitionLine.SETFILTER("Shortcut Dimension 2 Code",GETFILTER("Global Dimension 2 Filter"));
      RequisitionLine.SETFILTER("Due Date",GETFILTER("Date Filter"));
      RequisitionLine.SETRANGE("Planning Line Origin",RequisitionLine."Planning Line Origin"::Planning);
      RequisitionLine.CALCSUMS("Quantity (Base)");
      EXIT(RequisitionLine."Quantity (Base)");
    END;

    PROCEDURE CalcResvQtyOnSalesReturn@13() : Decimal;
    VAR
      ReservationEntry@1000 : Record 337;
    BEGIN
      ReservationEntry.SETCURRENTKEY(
        "Item No.","Source Type","Source Subtype","Reservation Status",
        "Location Code","Variant Code","Shipment Date","Expected Receipt Date");
      ReservationEntry.SETRANGE("Item No.","No.");
      ReservationEntry.SETRANGE("Source Type",DATABASE::"Sales Line");
      ReservationEntry.SETRANGE("Source Subtype",5); // return order
      ReservationEntry.SETRANGE("Reservation Status",ReservationEntry."Reservation Status"::Reservation);
      ReservationEntry.SETFILTER("Location Code",GETFILTER("Location Filter"));
      ReservationEntry.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
      ReservationEntry.SETFILTER("Expected Receipt Date",GETFILTER("Date Filter"));
      ReservationEntry.CALCSUMS("Quantity (Base)");
      EXIT(ReservationEntry."Quantity (Base)");
    END;

    PROCEDURE CalcPurchReturn@12() : Decimal;
    VAR
      PurchLine@1000 : Record 39;
    BEGIN
      PurchLine.SETCURRENTKEY("Document Type",Type,"No.","Variant Code","Drop Shipment","Location Code","Expected Receipt Date");
      PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::"Return Order");
      PurchLine.SETRANGE(Type,PurchLine.Type::Item);
      PurchLine.SETRANGE("No.","No.");
      PurchLine.SETFILTER("Location Code",GETFILTER("Location Filter"));
      PurchLine.SETFILTER("Drop Shipment",GETFILTER("Drop Shipment Filter"));
      PurchLine.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
      PurchLine.SETFILTER("Expected Receipt Date",GETFILTER("Date Filter"));
      PurchLine.CALCSUMS("Outstanding Qty. (Base)");
      EXIT(PurchLine."Outstanding Qty. (Base)");
    END;

    PROCEDURE CalcResvQtyOnPurchReturn@16() : Decimal;
    VAR
      ReservationEntry@1000 : Record 337;
    BEGIN
      ReservationEntry.SETCURRENTKEY(
        "Item No.","Source Type","Source Subtype","Reservation Status",
        "Location Code","Variant Code","Shipment Date","Expected Receipt Date");
      ReservationEntry.SETRANGE("Item No.","No.");
      ReservationEntry.SETRANGE("Source Type",DATABASE::"Purchase Line");
      ReservationEntry.SETRANGE("Source Subtype",5); // return order
      ReservationEntry.SETRANGE("Reservation Status",ReservationEntry."Reservation Status"::Reservation);
      ReservationEntry.SETFILTER("Location Code",GETFILTER("Location Filter"));
      ReservationEntry.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
      ReservationEntry.SETFILTER("Shipment Date",GETFILTER("Date Filter"));
      ReservationEntry.CALCSUMS("Quantity (Base)");
      EXIT(-ReservationEntry."Quantity (Base)");
    END;

    PROCEDURE CheckSerialNoQty@15(ItemNo@1000 : Code[20];FieldName@1001 : Text[30];Quantity@1002 : Decimal);
    VAR
      ItemRec@1003 : Record 27;
      ItemTrackingCode3@1004 : Record 6502;
    BEGIN
      IF Quantity = ROUND(Quantity,1) THEN
        EXIT;
      IF NOT ItemRec.GET(ItemNo) THEN
        EXIT;
      IF ItemRec."Item Tracking Code" = '' THEN
        EXIT;
      IF NOT ItemTrackingCode3.GET(ItemRec."Item Tracking Code") THEN
        EXIT;
      IF ItemTrackingCode3."SN Specific Tracking" THEN
        ERROR(Text025,
          FieldName,
          TABLECAPTION,
          ItemNo,
          ItemTrackingCode3.FIELDCAPTION("SN Specific Tracking"));
    END;

    PROCEDURE CheckForProductionOutput@17(ItemNo@1000 : Code[20]);
    VAR
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      CLEAR(ItemLedgEntry);
      ItemLedgEntry.SETCURRENTKEY("Item No.","Entry Type","Variant Code","Drop Shipment","Location Code","Posting Date");
      ItemLedgEntry.SETRANGE("Item No.",ItemNo);
      ItemLedgEntry.SETRANGE("Entry Type",ItemLedgEntry."Entry Type"::Output);
      IF NOT ItemLedgEntry.ISEMPTY THEN
        ERROR(Text026,FIELDCAPTION("Inventory Value Zero"),TABLECAPTION);
    END;

    PROCEDURE CheckBlockedByApplWorksheet@19();
    VAR
      ApplicationWorksheet@1000 : Page 521;
    BEGIN
      IF "Application Wksh. User ID" <> '' THEN
        ERROR(Text028,"No.",ApplicationWorksheet.CAPTION,"Application Wksh. User ID");
    END;

    PROCEDURE ShowTimelineFromItem@20(VAR Item@1000 : Record 27);
    VAR
      ItemAvailByTimeline@1001 : Page 5540;
    BEGIN
      ItemAvailByTimeline.SetItem(Item);
      ItemAvailByTimeline.RUN;
    END;

    PROCEDURE ShowTimelineFromSKU@21(ItemNo@1000 : Code[20];LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    VAR
      Item@1003 : Record 27;
    BEGIN
      Item.GET(ItemNo);
      Item.SETRANGE("No.",Item."No.");
      Item.SETRANGE("Variant Filter",VariantCode);
      Item.SETRANGE("Location Filter",LocationCode);
      ShowTimelineFromItem(Item);
    END;

    LOCAL PROCEDURE CheckJournalsAndWorksheets@22(CurrFieldNo@1001 : Integer);
    BEGIN
      CheckItemJnlLine(CurrFieldNo);
      CheckStdCostWksh(CurrFieldNo);
      CheckReqLine(CurrFieldNo);
    END;

    LOCAL PROCEDURE CheckItemJnlLine@44(CurrFieldNo@1000 : Integer);
    BEGIN
      ItemJnlLine.SETRANGE("Item No.","No.");
      IF NOT ItemJnlLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",ItemJnlLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ItemJnlLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckStdCostWksh@45(CurrFieldNo@1000 : Integer);
    VAR
      StdCostWksh@1001 : Record 5841;
    BEGIN
      StdCostWksh.RESET;
      StdCostWksh.SETRANGE(Type,StdCostWksh.Type::Item);
      StdCostWksh.SETRANGE("No.","No.");
      IF NOT StdCostWksh.ISEMPTY THEN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",StdCostWksh.TABLECAPTION);
    END;

    LOCAL PROCEDURE CheckReqLine@46(CurrFieldNo@1000 : Integer);
    BEGIN
      RequisitionLine.SETCURRENTKEY(Type,"No.");
      RequisitionLine.SETRANGE(Type,RequisitionLine.Type::Item);
      RequisitionLine.SETRANGE("No.","No.");
      IF NOT RequisitionLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",RequisitionLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",RequisitionLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckDocuments@23(CurrFieldNo@1002 : Integer);
    BEGIN
      CheckBOM(CurrFieldNo);
      CheckPurchLine(CurrFieldNo);
      CheckSalesLine(CurrFieldNo);
      CheckProdOrderLine(CurrFieldNo);
      CheckProdOrderCompLine(CurrFieldNo);
      CheckPlanningCompLine(CurrFieldNo);
      CheckTransLine(CurrFieldNo);
      CheckServLine(CurrFieldNo);
      CheckProdBOMLine(CurrFieldNo);
      CheckServContractLine(CurrFieldNo);
      CheckAsmHeader(CurrFieldNo);
      CheckAsmLine(CurrFieldNo);
      CheckJobPlanningLine(CurrFieldNo);
    END;

    LOCAL PROCEDURE CheckBOM@25(CurrFieldNo@1000 : Integer);
    BEGIN
      BOMComp.RESET;
      BOMComp.SETCURRENTKEY(Type,"No.");
      BOMComp.SETRANGE(Type,BOMComp.Type::Item);
      BOMComp.SETRANGE("No.","No.");
      IF NOT BOMComp.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",BOMComp.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",BOMComp.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckPurchLine@26(CurrFieldNo@1000 : Integer);
    BEGIN
      PurchOrderLine.SETCURRENTKEY(Type,"No.");
      PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::Item);
      PurchOrderLine.SETRANGE("No.","No.");
      IF NOT PurchOrderLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text000,TABLECAPTION,"No.",PurchOrderLine."Document Type");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",PurchOrderLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckSalesLine@28(CurrFieldNo@1000 : Integer);
    BEGIN
      SalesOrderLine.SETCURRENTKEY(Type,"No.");
      SalesOrderLine.SETRANGE(Type,SalesOrderLine.Type::Item);
      SalesOrderLine.SETRANGE("No.","No.");
      IF NOT SalesOrderLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text001,TABLECAPTION,"No.",SalesOrderLine."Document Type");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",SalesOrderLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckProdOrderLine@39(CurrFieldNo@1000 : Integer);
    BEGIN
      IF ProdOrderExist THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text002,TABLECAPTION,"No.");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ProdOrderLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckProdOrderCompLine@31(CurrFieldNo@1000 : Integer);
    BEGIN
      ProdOrderComp.SETCURRENTKEY(Status,"Item No.");
      ProdOrderComp.SETFILTER(Status,'..%1',ProdOrderComp.Status::Released);
      ProdOrderComp.SETRANGE("Item No.","No.");
      IF NOT ProdOrderComp.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text014,TABLECAPTION,"No.");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ProdOrderComp.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckPlanningCompLine@38(CurrFieldNo@1000 : Integer);
    VAR
      PlanningComponent@1005 : Record 99000829;
    BEGIN
      PlanningComponent.SETCURRENTKEY("Item No.","Variant Code","Location Code","Due Date","Planning Line Origin");
      PlanningComponent.SETRANGE("Item No.","No.");
      IF NOT PlanningComponent.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",PlanningComponent.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",PlanningComponent.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckTransLine@37(CurrFieldNo@1000 : Integer);
    BEGIN
      TransLine.SETCURRENTKEY("Item No.");
      TransLine.SETRANGE("Item No.","No.");
      IF NOT TransLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text016,TABLECAPTION,"No.");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",TransLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckServLine@36(CurrFieldNo@1000 : Integer);
    BEGIN
      ServInvLine.RESET;
      ServInvLine.SETCURRENTKEY(Type,"No.");
      ServInvLine.SETRANGE(Type,ServInvLine.Type::Item);
      ServInvLine.SETRANGE("No.","No.");
      IF NOT ServInvLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text017,TABLECAPTION,"No.",ServInvLine."Document Type");
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ServInvLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckProdBOMLine@30(CurrFieldNo@1000 : Integer);
    BEGIN
      ProdBOMLine.RESET;
      ProdBOMLine.SETCURRENTKEY(Type,"No.");
      ProdBOMLine.SETRANGE(Type,ProdBOMLine.Type::Item);
      ProdBOMLine.SETRANGE("No.","No.");
      IF ProdBOMLine.FIND('-') THEN BEGIN
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ProdBOMLine.TABLECAPTION);
        IF CurrFieldNo = 0 THEN
          REPEAT
            IF ProdBOMHeader.GET(ProdBOMLine."Production BOM No.") AND
               (ProdBOMHeader.Status = ProdBOMHeader.Status::Certified)
            THEN
              ERROR(Text004,TABLECAPTION,"No.");
          UNTIL ProdBOMLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckServContractLine@35(CurrFieldNo@1000 : Integer);
    BEGIN
      ServiceContractLine.RESET;
      ServiceContractLine.SETRANGE("Item No.","No.");
      IF NOT ServiceContractLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",ServiceContractLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",ServiceContractLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckAsmHeader@32(CurrFieldNo@1000 : Integer);
    VAR
      AsmHeader@1004 : Record 900;
    BEGIN
      AsmHeader.SETCURRENTKEY("Document Type","Item No.");
      AsmHeader.SETRANGE("Item No.","No.");
      IF NOT AsmHeader.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",AsmHeader.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",AsmHeader.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CheckAsmLine@27(CurrFieldNo@1000 : Integer);
    VAR
      AsmLine@1003 : Record 901;
    BEGIN
      AsmLine.SETCURRENTKEY(Type,"No.");
      AsmLine.SETRANGE(Type,AsmLine.Type::Item);
      AsmLine.SETRANGE("No.","No.");
      IF NOT AsmLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",AsmLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",AsmLine.TABLECAPTION);
      END;
    END;

    PROCEDURE PreventNegativeInventory@33() : Boolean;
    VAR
      InventorySetup@1000 : Record 313;
    BEGIN
      CASE "Prevent Negative Inventory" OF
        "Prevent Negative Inventory"::Yes:
          EXIT(TRUE);
        "Prevent Negative Inventory"::No:
          EXIT(FALSE);
        "Prevent Negative Inventory"::Default:
          BEGIN
            InventorySetup.GET;
            EXIT(InventorySetup."Prevent Negative Inventory");
          END;
      END;
    END;

    LOCAL PROCEDURE CheckJobPlanningLine@34(CurrFieldNo@1000 : Integer);
    VAR
      JobPlanningLine@1001 : Record 1003;
    BEGIN
      JobPlanningLine.SETCURRENTKEY(Type,"No.");
      JobPlanningLine.SETRANGE(Type,JobPlanningLine.Type::Item);
      JobPlanningLine.SETRANGE("No.","No.");
      IF NOT JobPlanningLine.ISEMPTY THEN BEGIN
        IF CurrFieldNo = 0 THEN
          ERROR(Text023,TABLECAPTION,"No.",JobPlanningLine.TABLECAPTION);
        IF CurrFieldNo = FIELDNO(Type) THEN
          ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",JobPlanningLine.TABLECAPTION);
      END;
    END;

    LOCAL PROCEDURE CalcVAT@40() : Decimal;
    BEGIN
      IF "Price Includes VAT" AND
         ("Price/Profit Calculation" < "Price/Profit Calculation"::"No Relationship")
      THEN BEGIN
        VATPostingSetup.GET("VAT Bus. Posting Gr. (Price)","VAT Prod. Posting Group");
        CASE VATPostingSetup."VAT Calculation Type" OF
          VATPostingSetup."VAT Calculation Type"::"Reverse Charge VAT":
            VATPostingSetup."VAT %" := 0;
          VATPostingSetup."VAT Calculation Type"::"Sales Tax":
            ERROR(
              Text006,
              VATPostingSetup.FIELDCAPTION("VAT Calculation Type"),
              VATPostingSetup."VAT Calculation Type");
        END;
      END ELSE
        CLEAR(VATPostingSetup);

      EXIT(VATPostingSetup."VAT %" / 100);
    END;

    PROCEDURE CalcUnitPriceExclVAT@41() : Decimal;
    BEGIN
      EXIT("Unit Price" * (1 - CalcVAT));
    END;

    PROCEDURE FillFromGeneralItem@1101491000(GeneralItem@1101491000 : Record 50033;FromGenItem@1000000000 : Boolean);
    BEGIN
      IF NOT FromGenItem THEN
        IF "General Item No." <> '' THEN
          ERROR(Text50003);

      CASE GeneralItem."Item Type" OF
        GeneralItem."Item Type"::Security:
          BEGIN
            IF "NKD Card" THEN BEGIN
              "Short Name" := COPYSTR(STRSUBSTNO(Text50001, GeneralItem."Short Name"), 1 , MAXSTRLEN("Short Name"));
              "Full Name" := COPYSTR(STRSUBSTNO(Text50001, GeneralItem."Full Name"), 1 , MAXSTRLEN("Full Name"));
              "Search Description" := COPYSTR(STRSUBSTNO(Text50001, GeneralItem."Search Description"), 1 ,
                MAXSTRLEN("Search Description"));
            END ELSE BEGIN
              "Short Name" := GeneralItem."Short Name";
              "Full Name" := GeneralItem."Full Name";
              "Search Description" := GeneralItem."Search Description";
            END;
            Emitent := GeneralItem.Emitent;
            "Security Kind" := GeneralItem."Security Kind";
            "Security Type" := GeneralItem."Security Type";
            "Security Category" := GeneralItem."Security Category";
            "Registration Number" := GeneralItem."Registration Number";
            "Registration Date" := GeneralItem."Registration Date";
            "Registration Organ" := GeneralItem."Registration Organ";
            ISIN := GeneralItem.ISIN;
            CFI := GeneralItem.CFI;
            Issue := GeneralItem.Issue;
            "Nominal Value" := GeneralItem."Nominal Value";
            //"Current Nominal Value" := GeneralItem."Current Nominal Value";
            "Currency Code" := GeneralItem."Currency Code";
            "Issue Quantity" := GeneralItem."Issue Quantity";
            "Issue Quantity Circulate" := GeneralItem."Issue Quantity Circulate";
            "Issue Form" := GeneralItem."Issue Form";
            "Qualified Investors" := GeneralItem."Qualified Investors";
            "Item Type" := GeneralItem."Item Type";
            "General Item No." := GeneralItem."No.";
            "Base Active" := GeneralItem."Base Active";
            "Day Paying Off" := GeneralItem."Day Paying Off";
          END;
        GeneralItem."Item Type"::Property:
          BEGIN
            "Search Description" := GeneralItem."Search Description";
            "Full Name" := GeneralItem."Full Name";
            "Short Name" := GeneralItem."Short Name";
            "Address Property" := GeneralItem."Address Property";
            "Appointment Property" := GeneralItem."Appointment Property";
            //"Square Property" := GeneralItem."Square Property";
            "Property Kind" := GeneralItem."Property Kind";
            "Property Type" := GeneralItem."Property Type";
            "Right Property" := GeneralItem."Right Property";
            "Day Paying Off" := GeneralItem."Day Paying Off";
            "Registration Number" := GeneralItem."Registration Number";
            "Registration Date" := GeneralItem."Registration Date";
            "Registration Organ" := GeneralItem."Registration Organ";
            "Item Type" := GeneralItem."Item Type";
            "General Item No." := GeneralItem."No.";
          END;
      END;
    END;

    PROCEDURE CheckExistGenItem@1101491002();
    VAR
      Item@1101491000 : Record 27;
    BEGIN
      IF GUIALLOWED THEN BEGIN
        Item.SETCURRENTKEY("General Item No.", "Item Type");
        Item.SETFILTER("No.", '<>%1', "No.");
        Item.SETRANGE("General Item No.", "General Item No.");
        Item.SETRANGE("Item Type", "Item Type");
        IF Item.FINDSET THEN
          IF NOT CONFIRM(STRSUBSTNO(Text50000, Item."No.")) THEN
            ERROR('');
      END;
    END;

    PROCEDURE CheckSecurityBond@1000000000() : Boolean;
    VAR
      SecurityKind@1000000000 : Record 50018;
    BEGIN
      IF SecurityKind.GET("Security Kind", "Item Type") THEN
        EXIT(SecurityKind.Bond);

      EXIT(FALSE);
    END;

    PROCEDURE CreateNKDItemCard@1000000001();
    VAR
      Item@1000000000 : Record 27;
    BEGIN
      IF "Linked NKD Item No." <> '' THEN
        EXIT;
      IF NOT CheckSecurityBond THEN
        EXIT;

      Item := Rec;
      Item."No." := '';
      Item.VALIDATE("Short Name", "Short Name");
      Item.VALIDATE("Full Name", "Full Name");
      Item."Search Description" := "Search Description";
      Item."NKD Card" := TRUE;
      Item."Income Stock Appointment Code"  := '';
      Item."Expense Stock Appointment Code" := '';
      Item."Income Ex-pit Appointment Code" := '';
      Item."Expense Ex-pit Appoint. Code"   := '';
      Item."Right Property" := "Right Property";
      Item.INSERT(TRUE);
      "Linked NKD Item No." := Item."No.";
      //IF GUIALLOWED THEN
      //  MESSAGE(STRSUBSTNO(Text50002, "Linked NKD Item No."));
    END;

    PROCEDURE FillPostSettings@1000000002();
    VAR
      FillPostSet@1000000000 : Boolean;
    BEGIN
      IF "NKD Card" THEN
        EXIT;

      IF "Security Kind" = '' THEN
        EXIT;

      SpecSetup.GET;

      IF "Income Stock Appointment Code" = '' THEN
        IF "Expense Stock Appointment Code" = '' THEN
          IF "Income Ex-pit Appointment Code" = '' THEN
            IF "Expense Ex-pit Appoint. Code" = '' THEN
              FillPostSet := TRUE;

      IF NOT FillPostSet THEN
        EXIT;

      IF CheckSecurityBond THEN BEGIN
        "Income Stock Appointment Code"  := SpecSetup."Income Bond Stock App. Code";
        "Expense Stock Appointment Code" := SpecSetup."Expense Bond Stock App. Code";
        "Income Ex-pit Appointment Code" := SpecSetup."Income Bond Ex-pit App. Code";
        "Expense Ex-pit Appoint. Code"   := SpecSetup."Expense Bond Ex-pit App. Code";
      END ELSE BEGIN
        "Income Stock Appointment Code"  := SpecSetup."Income Stock Appointment Code";
        "Expense Stock Appointment Code" := SpecSetup."Expense Stock Appointment Code";
        "Income Ex-pit Appointment Code" := SpecSetup."Income Ex-pit Appointment Code";
        "Expense Ex-pit Appoint. Code"   := SpecSetup."Expense Ex-pit Appoint. Code";
      END;
    END;

    PROCEDURE GetRevalFinPostCode@1000000003(PositiveAmount@1000000000 : Boolean;SettlItem@1000000001 : Boolean) : Code[50];
    VAR
      FinPostSetup@1000000002 : Record 50037;
    BEGIN
      SpecSetup.GET;
      CASE TRUE OF
        "Item Type" = "Item Type"::Property:
          BEGIN
            SpecSetupAdd.GetRec;
            IF PositiveAmount THEN BEGIN
              SpecSetupAdd.TESTFIELD("Positive Prop. Val. App. Code");
              FinPostSetup.GET(SpecSetupAdd."Positive Prop. Val. App. Code");
            END ELSE BEGIN
              SpecSetupAdd.TESTFIELD("Negative Prop. Val. App. Code");
              FinPostSetup.GET(SpecSetupAdd."Negative Prop. Val. App. Code");
            END;
          END;
        "NKD Card":
          BEGIN
            CASE SettlItem OF
              FALSE:
                IF PositiveAmount THEN BEGIN
                  SpecSetup.TESTFIELD("Positive NKD Val. App. Code");
                  FinPostSetup.GET(SpecSetup."Positive NKD Val. App. Code");
                END ELSE BEGIN
                  SpecSetup.TESTFIELD("Negative NKD Val. App. Code");
                  FinPostSetup.GET(SpecSetup."Negative NKD Val. App. Code");
                END;
              TRUE:
                IF NOT PositiveAmount THEN BEGIN
                  SpecSetup.TESTFIELD("Settl. Coupon Inc. App. Code");
                  FinPostSetup.GET(SpecSetup."Settl. Coupon Inc. App. Code");
                END ELSE BEGIN
                  SpecSetup.TESTFIELD("Cancel Coupon Inc. App. Code");
                  FinPostSetup.GET(SpecSetup."Cancel Coupon Inc. App. Code");
                END;
            END;
          END;
        CheckSecurityBond:
          BEGIN
            CASE SettlItem OF
              FALSE:
                IF PositiveAmount THEN BEGIN
                  SpecSetup.TESTFIELD("Positive Bonds Val. App. Code");
                  FinPostSetup.GET(SpecSetup."Positive Bonds Val. App. Code");
                END ELSE BEGIN
                  SpecSetup.TESTFIELD("Negative Bonds Val. App. Code");
                  FinPostSetup.GET(SpecSetup."Negative Bonds Val. App. Code");
                END;
              TRUE:
                BEGIN
                  SpecSetup.TESTFIELD("Depreciation Cost App. Code");
                  FinPostSetup.GET(SpecSetup."Depreciation Cost App. Code");
                END;
            END;
          END;
        ELSE BEGIN
          IF PositiveAmount THEN BEGIN
            SpecSetup.TESTFIELD("Positive Shares Val. App. Code");
            FinPostSetup.GET(SpecSetup."Positive Shares Val. App. Code");
          END ELSE BEGIN
            SpecSetup.TESTFIELD("Negative Shares Val. App. Code");
            FinPostSetup.GET(SpecSetup."Negative Shares Val. App. Code");
          END;
        END;
      END;

      EXIT(FinPostSetup."Appointment Code");
    END;

    PROCEDURE NotTestEntryesExist@1000000004();
    BEGIN
      NotTestEntriesExist := TRUE;
    END;

    PROCEDURE SaveHistory@1000000005(IDField@1000000002 : Integer);
    VAR
      CaseHisory@1000000003 : Record 50098;
      RecRef@1000000004 : RecordRef;
      RecField@1000000005 : FieldRef;
      xRecRef@1000000006 : RecordRef;
      xRecField@1000000007 : FieldRef;
      MortgageL@1000000000 : Record 50097;
    BEGIN
      RecRef.GETTABLE(Rec);
      RecField := RecRef.FIELD(IDField);
      xRecRef.GETTABLE(xRec);
      xRecField := xRecRef.FIELD(IDField);
      CaseHisory."Change Date" := TODAY;
      CaseHisory."Change Time" := TIME;
      CaseHisory."Table No." := 27;
      CaseHisory."Table Name" := TABLECAPTION;
      CaseHisory."Field No." := IDField;
      CaseHisory."Field Name" := RecField.CAPTION;
      //CaseHisory."Field Type" :=
      CaseHisory."Old Value" := FORMAT(xRecField.VALUE);
      CaseHisory."New Value" := FORMAT(RecField.VALUE);
      //MortgageL.SETRANGE("Registration Number","Mortgage Reg. Number");
      //MortgageL.FINDSET;
      CaseHisory."Mortgage No." := "No.";
      CaseHisory."Operation Date" := DateHistory;
      CaseHisory."Operation Time" := TIME;
      CaseHisory."Fund Name" := COMPANYNAME;
      CaseHisory.INSERT(TRUE);
    END;

    PROCEDURE SetChangeHistory@1000000008(DateSave@1000000000 : Date);
    BEGIN
      DateHistory := DateSave;
    END;

    PROCEDURE ModifyNKDItemCard@1000000006();
    VAR
      Item@1000000000 : Record 27;
    BEGIN
      IF "Linked NKD Item No." = '' THEN
        EXIT;

      IF NOT Item.GET("Linked NKD Item No.") THEN
        EXIT;

      Item."Full Name" := "Full Name";
      Item.Place := Place;
      Item."Lic. No." := "Lic. No.";
      Item."Lic. Date" := "Lic. Date";
      Item."Security Kind" := "Security Kind";
      Item."Region Name" := "Region Name";
      Item."Registration Number" := "Registration Number";
      Item."Registration Date" := "Registration Date";
      Item."Nominal Value" := "Nominal Value";
      Item."Current Nominal Value" := "Current Nominal Value";
      Item."Day Paying Off" := "Day Paying Off";
      Item.ISIN := ISIN;
      Item.CFI := CFI;
      Item."Status Estate" :="Status Estate";
      Item."Issue Quantity" := "Issue Quantity";
      Item."Issue Quantity Circulate" := "Issue Quantity Circulate";
      Item."Issue Form" := "Issue Form";
      Item."Right Property" := '??? ' + "Right Property";
      Item.MODIFY;
    END;

    BEGIN
    {
      //olgahm 29/01/2015 ?? ??? ???? ????. ????? ?? ???? MortCover_GPB
    }
    END.
  }
}


